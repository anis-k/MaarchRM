{
    "swagger": "2.0",
    "info": {
        "title": "Maarch RM",
        "version": "2.1",
        "contact": {
            "name": "Cyril VAZQUEZ",
            "email": "cyril.vazquez@maarch.org",
            "url": "http://maarchrm.com"
        },
        "license": {
            "name": "GNU Lesser General Public License V3",
            "url": "http://www.gnu.org/licenses/lgpl.txt"
        }
    },
    "host": "maarchrm.svc:80",
    "basePath": "/",
    "schemes": [
        "http",
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/audit/event": {
            "post": {
                "description": "Create new audit events",
                "operationId": "audit/event/create",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "path"
                            ],
                            "properties": {
                                "path": {
                                    "description": "The path of called service",
                                    "type": "string"
                                },
                                "variables": {
                                    "description": "The path variables",
                                    "type": "array"
                                },
                                "input": {
                                    "description": "The input data",
                                    "type": "string"
                                },
                                "output": {
                                    "description": "The output data",
                                    "type": "string"
                                },
                                "status": {
                                    "description": "The result of action: success or failure (business exception)",
                                    "type": "boolean"
                                },
                                "info": {
                                    "description": "The info on caller process/client/system",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        }
                    }
                }
            }
        },
        "/audit/event/Search": {
            "get": {
                "description": "Get search form for entries",
                "operationId": "audit/event/readSearch",
                "parameters": [
                    {
                        "name": "eventType",
                        "in": "query",
                        "description": "Type of event",
                        "type": "string"
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "description": "Start date",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "description": "End date",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "description": "Id of account",
                        "type": "string"
                    },
                    {
                        "name": "event",
                        "in": "query",
                        "description": "Variables",
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Term to search",
                        "type": "string"
                    },
                    {
                        "name": "term",
                        "in": "query",
                        "description": "Wording to search",
                        "type": "string"
                    },
                    {
                        "name": "wording",
                        "in": "query",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/audit/properties/event"
                            }
                        }
                    }
                }
            }
        },
        "/audit/event/{eventId}": {
            "get": {
                "description": "Get search form for entries",
                "operationId": "audit/event/read_eventId_",
                "parameters": [
                    {
                        "name": "eventId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/audit/properties/event"
                        }
                    }
                }
            }
        },
        "/audit/event/Chainjournal": {
            "post": {
                "description": "Chain the last journal",
                "operationId": "audit/event/createChainjournal",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/authentication/Userlogin": {
            "post": {
                "description": "Authenticate a user account",
                "operationId": "auth/authentication/createUserlogin",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "userName",
                                "password"
                            ],
                            "properties": {
                                "userName": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "delete": {
                "description": "Log off the user account",
                "operationId": "auth/authentication/deleteUserlogin",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/auth/authentication/Password": {
            "put": {
                "description": "Change a user Account password",
                "operationId": "auth/authentication/updatePassword",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "userName",
                                "oldPassword",
                                "newPassword",
                                "requestPath"
                            ],
                            "properties": {
                                "userName": {
                                    "description": "The username",
                                    "type": "string"
                                },
                                "oldPassword": {
                                    "description": "The user's old password",
                                    "type": "string"
                                },
                                "newPassword": {
                                    "description": "The user's new password",
                                    "type": "string"
                                },
                                "requestPath": {
                                    "description": "The requested path",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/auth/publicUserStory": {
            "get": {
                "description": "Prepares access control object for update or create",
                "operationId": "auth/publicUserStory/read",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/auth/properties/publicUserStory"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new user story public",
                "operationId": "auth/publicUserStory/create",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "publicUserStory"
                            ],
                            "properties": {
                                "publicUserStory": {
                                    "description": "user story public",
                                    "$ref": "#/definitions/auth/properties/publicUserStory"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an user story public",
                "operationId": "auth/publicUserStory/delete",
                "parameters": [
                    {
                        "name": "publicUserStory",
                        "in": "query",
                        "description": "The user story public",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/auth/role/Index": {
            "get": {
                "description": "List the authorization's roles",
                "operationId": "auth/role/readIndex",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/auth/role/Newrole": {
            "get": {
                "description": "Prepare an empty role object",
                "operationId": "auth/role/readNewrole",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/auth/properties/role"
                        }
                    }
                }
            }
        },
        "/auth/role/{roleId}": {
            "get": {
                "description": "Prepares access control object for update or create",
                "operationId": "auth/role/read_roleId_",
                "parameters": [
                    {
                        "name": "roleId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/auth/properties/role"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates a role",
                "operationId": "auth/role/update_roleId_",
                "parameters": [
                    {
                        "name": "roleId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "role"
                            ],
                            "properties": {
                                "role": {
                                    "$ref": "#/definitions/auth/properties/role"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an authorization role",
                "operationId": "auth/role/delete_roleId_",
                "parameters": [
                    {
                        "name": "roleId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/auth/role/{roleId}/Privileges": {
            "get": {
                "description": "Get the role privileges on userStories",
                "operationId": "auth/role/read_roleId_Privileges",
                "parameters": [
                    {
                        "name": "roleId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/auth/role": {
            "post": {
                "description": "Create a new role",
                "operationId": "auth/role/create",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "role"
                            ],
                            "properties": {
                                "role": {
                                    "$ref": "#/definitions/auth/properties/role"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/auth/role/{roleId}/Privilege": {
            "post": {
                "description": "Create a new privilege",
                "operationId": "auth/role/create_roleId_Privilege",
                "parameters": [
                    {
                        "name": "roleId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "userStory"
                            ],
                            "properties": {
                                "userStory": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/auth/role/{roleId}/Status/{status}": {
            "put": {
                "description": "Lock or unlock a role",
                "operationId": "auth/role/update_roleId_Status_status_",
                "parameters": [
                    {
                        "name": "roleId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/auth/role/Privilege": {
            "delete": {
                "description": "Delete a privilege",
                "operationId": "auth/role/deletePrivilege",
                "parameters": [
                    {
                        "name": "privilege",
                        "in": "query",
                        "description": "The privilege object",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/auth/role/Roles/{query}": {
            "get": {
                "description": "Get the list of available persons",
                "operationId": "auth/role/readRoles_query_",
                "parameters": [
                    {
                        "name": "query",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/auth/roleMember/Index": {
            "get": {
                "description": "List the authorization's roleMembers",
                "operationId": "auth/roleMember/readIndex",
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "No documentation available"
                    }
                }
            }
        },
        "/auth/roleMember/Byrole/{roleId}": {
            "get": {
                "description": "Prepares access control object for update or create",
                "operationId": "auth/roleMember/readByrole_roleId_",
                "parameters": [
                    {
                        "name": "roleId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/auth/properties/roleMember"
                        }
                    }
                }
            }
        },
        "/auth/roleMember/Byuseraccount/{userAccountId}": {
            "get": {
                "description": "Prepares access control object for update or create",
                "operationId": "auth/roleMember/readByuseraccount_userAccountId_",
                "parameters": [
                    {
                        "name": "userAccountId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/auth/properties/roleMember"
                        }
                    }
                }
            }
        },
        "/auth/roleMember": {
            "post": {
                "description": "Create a new role",
                "operationId": "auth/roleMember/create",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "roleId",
                                "userAccountId"
                            ],
                            "properties": {
                                "roleId": {
                                    "type": "string",
                                    "pattern": "^[a-z_][a-z0-9\\-_]*$"
                                },
                                "userAccountId": {
                                    "type": "string",
                                    "pattern": "^[a-z_][a-z0-9\\-_]*$"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/auth/roleMember/{roleId}/{userAccountId}": {
            "delete": {
                "description": "Delete a role",
                "operationId": "auth/roleMember/delete_roleId__userAccountId_",
                "parameters": [
                    {
                        "name": "roleId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userAccountId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/auth/serviceAccount/Index": {
            "get": {
                "description": "List the authorization's service Account",
                "operationId": "auth/serviceAccount/readIndex",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/auth/properties/account"
                            }
                        }
                    }
                }
            }
        },
        "/auth/serviceAccount/Search": {
            "get": {
                "description": "List the service account detail",
                "operationId": "auth/serviceAccount/readSearch",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/auth/serviceAccount/Newservice": {
            "get": {
                "description": "Prepare an empty service Account object",
                "operationId": "auth/serviceAccount/readNewservice",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/auth/properties/account"
                        }
                    }
                }
            }
        },
        "/auth/serviceAccount/{serviceAccountId}": {
            "get": {
                "description": "Prepares access control object for update or create",
                "operationId": "auth/serviceAccount/read_serviceAccountId_",
                "parameters": [
                    {
                        "name": "serviceAccountId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/auth/properties/account"
                        }
                    }
                }
            }
        },
        "/auth/serviceAccount": {
            "post": {
                "description": "Create a new service Account",
                "operationId": "auth/serviceAccount/create",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "serviceAccount",
                                "orgId",
                                "servicesURI"
                            ],
                            "properties": {
                                "serviceAccount": {
                                    "$ref": "#/definitions/auth/properties/serviceAccount"
                                },
                                "orgId": {
                                    "type": "string"
                                },
                                "servicesURI": {
                                    "type": "array"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/auth/properties/account"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates a service Account",
                "operationId": "auth/serviceAccount/update",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "serviceAccount",
                                "servicesURI"
                            ],
                            "properties": {
                                "serviceAccount": {
                                    "$ref": "#/definitions/auth/properties/serviceAccount"
                                },
                                "orgId": {
                                    "type": "string"
                                },
                                "servicesURI": {
                                    "type": "array"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/auth/serviceAccount/Enable/{serviceAccountId}": {
            "put": {
                "description": "Enable a service Account",
                "operationId": "auth/serviceAccount/updateEnable_serviceAccountId_",
                "parameters": [
                    {
                        "name": "serviceAccountId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/auth/properties/account"
                        }
                    }
                }
            }
        },
        "/auth/serviceAccount/Disable/{serviceAccountId}": {
            "put": {
                "description": "Disable a service Account",
                "operationId": "auth/serviceAccount/updateDisable_serviceAccountId_",
                "parameters": [
                    {
                        "name": "serviceAccountId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/auth/properties/account"
                        }
                    }
                }
            }
        },
        "/auth/serviceAccount/Servicetoken/{serviceAccountId}": {
            "get": {
                "description": "Generate service account token",
                "operationId": "auth/serviceAccount/readServicetoken_serviceAccountId_",
                "parameters": [
                    {
                        "name": "serviceAccountId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/serviceAccount/Query/{query}": {
            "get": {
                "description": "Search the service account for typehead",
                "operationId": "auth/serviceAccount/readQuery_query_",
                "parameters": [
                    {
                        "name": "query",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "The query string",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/auth/userAccount/Index": {
            "get": {
                "description": "List the user account information",
                "operationId": "auth/userAccount/readIndex",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/auth/userAccount/Userlist": {
            "get": {
                "description": "List the user account",
                "operationId": "auth/userAccount/readUserlist",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/auth/userAccount/Search": {
            "get": {
                "description": "List the user account detail",
                "operationId": "auth/userAccount/readSearch",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/auth/userAccount/Query/{query}": {
            "get": {
                "description": "Search the user account for typehead",
                "operationId": "auth/userAccount/readQuery_query_",
                "parameters": [
                    {
                        "name": "query",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "The query string",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/auth/userAccount/New": {
            "get": {
                "description": "Prepare an empty user Account object",
                "operationId": "auth/userAccount/readNew",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/auth/properties/account"
                        }
                    }
                }
            }
        },
        "/auth/userAccount": {
            "post": {
                "description": "Add a new user & role members",
                "operationId": "auth/userAccount/create",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "userAccount"
                            ],
                            "properties": {
                                "userAccount": {
                                    "description": "The new user Account information",
                                    "$ref": "#/definitions/auth/properties/newUserAccount"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/userAccount/Useraccount": {
            "post": {
                "description": "Add a new user account",
                "operationId": "auth/userAccount/createUseraccount",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "userAccount"
                            ],
                            "properties": {
                                "userAccount": {
                                    "description": "The new user Account information",
                                    "$ref": "#/definitions/auth/properties/userAccount"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/userAccount/{userAccountId}": {
            "get": {
                "description": "Prepare a user Account object for update",
                "operationId": "auth/userAccount/read_userAccountId_",
                "parameters": [
                    {
                        "name": "userAccountId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/auth/properties/account"
                        }
                    }
                }
            },
            "put": {
                "description": "Allow to modify user Account & role memebers",
                "operationId": "auth/userAccount/update_userAccountId_",
                "parameters": [
                    {
                        "name": "userAccountId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "userAccount": {
                                    "description": "The new user Account information",
                                    "$ref": "#/definitions/auth/properties/userAccountUpdate"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No documentation available"
                    }
                }
            }
        },
        "/auth/userAccount/Profile": {
            "get": {
                "description": "Prepare a user Account object for update",
                "operationId": "auth/userAccount/readProfile",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/auth/properties/account"
                        }
                    }
                }
            },
            "put": {
                "description": "Update my profile",
                "operationId": "auth/userAccount/updateProfile",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "userAccount"
                            ],
                            "properties": {
                                "userAccount": {}
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/auth/userAccount/{userAccountId}/Information": {
            "get": {
                "description": "Get the user Account personal information",
                "operationId": "auth/userAccount/read_userAccountId_Information",
                "parameters": [
                    {
                        "name": "userAccountId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userAccountId",
                        "in": "query",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-z_][a-z0-9\\-_]*$"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/auth/properties/accountInformation"
                        }
                    }
                }
            }
        },
        "/auth/userAccount/{userAccountId}/Privileges": {
            "get": {
                "description": "Get list of user story",
                "operationId": "auth/userAccount/read_userAccountId_Privileges",
                "parameters": [
                    {
                        "name": "userAccountId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userAccountId",
                        "in": "query",
                        "description": "The user account identifier",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/auth/userAccount/Hasprivilege": {
            "get": {
                "description": "Check if user account has privilege on the user story",
                "operationId": "auth/userAccount/readHasprivilege",
                "parameters": [
                    {
                        "name": "userStory",
                        "in": "query",
                        "description": "The user story",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-z_][a-z0-9\\-_]*\\/[a-z_][a-z0-9\\-_]*$"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/auth/userAccount/Accessrule/{objectClass}": {
            "get": {
                "description": "Get list of user access rules of current user",
                "operationId": "auth/userAccount/readAccessrule_objectClass_",
                "parameters": [
                    {
                        "name": "objectClass",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No documentation available"
                    }
                }
            }
        },
        "/auth/userAccount/Disable/{userAccountId}": {
            "put": {
                "description": "Disable a user Account",
                "operationId": "auth/userAccount/updateDisable_userAccountId_",
                "parameters": [
                    {
                        "name": "userAccountId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "replacingUserAccountId"
                            ],
                            "properties": {
                                "replacingUserAccountId": {
                                    "description": "The replacing user acocount id",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/auth/userAccount/Enable/{userAccountId}": {
            "put": {
                "description": "Enable a user Account",
                "operationId": "auth/userAccount/updateEnable_userAccountId_",
                "parameters": [
                    {
                        "name": "userAccountId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/auth/userAccount/Lock/{userAccountId}": {
            "put": {
                "description": "Lock a user Account",
                "operationId": "auth/userAccount/updateLock_userAccountId_",
                "parameters": [
                    {
                        "name": "userAccountId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/auth/userAccount/Unlock/{userAccountId}": {
            "put": {
                "description": "Unlock a user Account",
                "operationId": "auth/userAccount/updateUnlock_userAccountId_",
                "parameters": [
                    {
                        "name": "userAccountId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/auth/userAccount/Password/{userAccountId}": {
            "put": {
                "description": "Change a user Account password",
                "operationId": "auth/userAccount/updatePassword_userAccountId_",
                "parameters": [
                    {
                        "name": "userAccountId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "newPassword"
                            ],
                            "properties": {
                                "newPassword": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/auth/userAccount/Generate/Password": {
            "put": {
                "description": "Generate a new password",
                "operationId": "auth/userAccount/updateGeneratePassword",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "username",
                                "email"
                            ],
                            "properties": {
                                "username": {
                                    "description": "The username",
                                    "type": "string"
                                },
                                "email": {
                                    "description": "The email of the user",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/auth/userAccount/Passwordchangerequest/{userAccountId}": {
            "put": {
                "description": "Required password change",
                "operationId": "auth/userAccount/updatePasswordchangerequest_userAccountId_",
                "parameters": [
                    {
                        "name": "userAccountId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/batchProcessing/logscheduling/{logId}": {
            "get": {
                "description": "Get search form for entries",
                "operationId": "batchProcessing/logscheduling/read_logId_",
                "parameters": [
                    {
                        "name": "logId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/batchProcessing/properties/logScheduling"
                        }
                    }
                }
            }
        },
        "/batchProcessing/logscheduling/{schedulingId}": {
            "get": {
                "description": "Get search form for entries",
                "operationId": "batchProcessing/logscheduling/read_schedulingId_",
                "parameters": [
                    {
                        "name": "schedulingId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/batchProcessing/properties/logScheduling"
                        }
                    }
                }
            }
        },
        "/batchProcessing/notification": {
            "post": {
                "description": "Create a notification in the stack",
                "operationId": "batchProcessing/notification/create",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "title",
                                "message",
                                "receivers"
                            ],
                            "properties": {
                                "title": {
                                    "description": "The title of the notification",
                                    "type": "string"
                                },
                                "message": {
                                    "description": "The message of the notification",
                                    "type": "string"
                                },
                                "receivers": {
                                    "description": "The receivers of the notification",
                                    "type": "array"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/batchProcessing/notification/Process": {
            "put": {
                "description": "Process notifications in the stack",
                "operationId": "batchProcessing/notification/updateProcess",
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "No documentation available"
                    }
                }
            }
        },
        "/batchProcessing/scheduling": {
            "post": {
                "description": "Create the scheduling",
                "operationId": "batchProcessing/scheduling/create",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "scheduling"
                            ],
                            "properties": {
                                "scheduling": {
                                    "$ref": "#/definitions/batchProcessing/properties/scheduling"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a scheduling",
                "operationId": "batchProcessing/scheduling/update",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "scheduling"
                            ],
                            "properties": {
                                "scheduling": {
                                    "$ref": "#/definitions/batchProcessing/properties/scheduling"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/batchProcessing/scheduling/Schedulings": {
            "get": {
                "description": "Read all scheduling",
                "operationId": "batchProcessing/scheduling/readSchedulings",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/batchProcessing/scheduling/Tasks": {
            "get": {
                "description": "Read all task",
                "operationId": "batchProcessing/scheduling/readTasks",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/batchProcessing/properties/task"
                        }
                    }
                }
            }
        },
        "/batchProcessing/scheduling/{schedulingId}": {
            "delete": {
                "description": "Delete a scheduling",
                "operationId": "batchProcessing/scheduling/delete_schedulingId_",
                "parameters": [
                    {
                        "name": "schedulingId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/batchProcessing/scheduling/Execute/{schedulingId}": {
            "get": {
                "description": "Execute a scheduling",
                "operationId": "batchProcessing/scheduling/readExecute_schedulingId_",
                "parameters": [
                    {
                        "name": "schedulingId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/batchProcessing/properties/scheduling"
                        }
                    }
                }
            }
        },
        "/batchProcessing/scheduling/Process": {
            "put": {
                "description": "Process scedulings",
                "operationId": "batchProcessing/scheduling/updateProcess",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/batchProcessing/scheduling/Changestatus": {
            "put": {
                "description": "Update status of scheduling",
                "operationId": "batchProcessing/scheduling/updateChangestatus",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "schedulingId",
                                "status"
                            ],
                            "properties": {
                                "schedulingId": {},
                                "status": {}
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/batchProcessing/properties/scheduling"
                        }
                    }
                }
            }
        },
        "/batchProcessing/task/Index": {
            "get": {
                "description": "List the task",
                "operationId": "batchProcessing/task/readIndex",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/batchProcessing/properties/task"
                        }
                    }
                }
            }
        },
        "/batchProcessing/task/{taskId}": {
            "get": {
                "description": "Edit a task",
                "operationId": "batchProcessing/task/read_taskId_",
                "parameters": [
                    {
                        "name": "taskId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/batchProcessing/properties/task"
                        }
                    }
                }
            },
            "put": {
                "description": "update a task",
                "operationId": "batchProcessing/task/update_taskId_",
                "parameters": [
                    {
                        "name": "taskId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "task"
                            ],
                            "properties": {
                                "task": {
                                    "description": "The task",
                                    "$ref": "#/definitions/batchProcessing/properties/task"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete a task",
                "operationId": "batchProcessing/task/delete_taskId_",
                "parameters": [
                    {
                        "name": "taskId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/batchProcessing/task": {
            "post": {
                "description": "create a task",
                "operationId": "batchProcessing/task/create",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "task"
                            ],
                            "properties": {
                                "task": {
                                    "description": "The task",
                                    "$ref": "#/definitions/batchProcessing/properties/task"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/contact/communicationMean/Index": {
            "get": {
                "description": "Get the index of commMeans",
                "operationId": "contact/communicationMean/readIndex",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/contact/communicationMean": {
            "post": {
                "description": "Add an orgUnit type",
                "operationId": "contact/communicationMean/create",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "communicationMean"
                            ],
                            "properties": {
                                "communicationMean": {
                                    "description": "the communication mean object",
                                    "$ref": "#/definitions/contact/properties/communicationMean"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/contact/communicationMean/{code}": {
            "get": {
                "description": "Edit a communication mean",
                "operationId": "contact/communicationMean/read_code_",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "description": "Modify a communication mean",
                "operationId": "contact/communicationMean/update_code_",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "name",
                                "enabled"
                            ],
                            "properties": {
                                "name": {
                                    "description": "The commMean to name",
                                    "type": "string"
                                },
                                "enabled": {
                                    "description": "The status",
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a communication mean",
                "operationId": "contact/communicationMean/delete_code_",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/contact/contact/Index": {
            "get": {
                "description": "Get the index of persons",
                "operationId": "contact/contact/readIndex",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/contact/contact": {
            "post": {
                "description": "Add a new contact",
                "operationId": "contact/contact/create",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "contact"
                            ],
                            "properties": {
                                "contact": {
                                    "description": "The contact to record",
                                    "$ref": "#/definitions/contact/properties/contact"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        }
                    }
                }
            }
        },
        "/contact/contact/{contactId}": {
            "get": {
                "description": "Get a contact by its id",
                "operationId": "contact/contact/read_contactId_",
                "parameters": [
                    {
                        "name": "contactId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/contact/properties/contact"
                        }
                    }
                }
            },
            "put": {
                "description": "Modify a contact",
                "operationId": "contact/contact/update_contactId_",
                "parameters": [
                    {
                        "name": "contactId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "contact"
                            ],
                            "properties": {
                                "contact": {
                                    "description": "The the contact to modify",
                                    "$ref": "#/definitions/contact/properties/contact"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a contact",
                "operationId": "contact/contact/delete_contactId_",
                "parameters": [
                    {
                        "name": "contactId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/contact/contact/{contactId}/Address": {
            "get": {
                "description": "Get a contact addresses",
                "operationId": "contact/contact/read_contactId_Address",
                "parameters": [
                    {
                        "name": "contactId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/contact/properties/address"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new address",
                "operationId": "contact/contact/create_contactId_Address",
                "parameters": [
                    {
                        "name": "contactId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "address"
                            ],
                            "properties": {
                                "address": {
                                    "description": "The address to record",
                                    "$ref": "#/definitions/contact/properties/address"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/contact/properties/address"
                        }
                    }
                }
            }
        },
        "/contact/contact/Address/{addressId}": {
            "get": {
                "description": "get an address",
                "operationId": "contact/contact/readAddress_addressId_",
                "parameters": [
                    {
                        "name": "addressId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/contact/properties/address"
                        }
                    }
                }
            },
            "put": {
                "description": "Modify an address",
                "operationId": "contact/contact/updateAddress_addressId_",
                "parameters": [
                    {
                        "name": "addressId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "address"
                            ],
                            "properties": {
                                "address": {
                                    "description": "The address to modify",
                                    "$ref": "#/definitions/contact/properties/address"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an address",
                "operationId": "contact/contact/deleteAddress_addressId_",
                "parameters": [
                    {
                        "name": "addressId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/contact/contact/{contactId}/Communication": {
            "post": {
                "description": "Record a new communication",
                "operationId": "contact/contact/create_contactId_Communication",
                "parameters": [
                    {
                        "name": "contactId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "communication"
                            ],
                            "properties": {
                                "communication": {
                                    "description": "The communication to record",
                                    "$ref": "#/definitions/contact/properties/communication"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/contact/properties/communication"
                        }
                    }
                }
            },
            "get": {
                "description": "Get all communications",
                "operationId": "contact/contact/read_contactId_Communication",
                "parameters": [
                    {
                        "name": "contactId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/contact/properties/communication"
                            }
                        }
                    }
                }
            }
        },
        "/contact/contact/{contactId}/Communication/{comMeanCode}": {
            "get": {
                "description": "Get communications for a mean",
                "operationId": "contact/contact/read_contactId_Communication_comMeanCode_",
                "parameters": [
                    {
                        "name": "contactId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "comMeanCode",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/contact/properties/communication"
                            }
                        }
                    }
                }
            }
        },
        "/contact/contact/Communication/{communicationId}": {
            "get": {
                "description": "Get a communication",
                "operationId": "contact/contact/readCommunication_communicationId_",
                "parameters": [
                    {
                        "name": "communicationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/contact/properties/communication"
                        }
                    }
                }
            },
            "put": {
                "description": "Modify a communication",
                "operationId": "contact/contact/updateCommunication_communicationId_",
                "parameters": [
                    {
                        "name": "communicationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "communication"
                            ],
                            "properties": {
                                "communication": {
                                    "description": "The communication value",
                                    "$ref": "#/definitions/contact/properties/communication"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/contact/properties/communication"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a communication",
                "operationId": "contact/contact/deleteCommunication_communicationId_",
                "parameters": [
                    {
                        "name": "communicationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/digitalResource/cluster/List": {
            "get": {
                "description": "Allow to display all clusters",
                "operationId": "digitalResource/cluster/readList",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/digitalResource/properties/cluster"
                            }
                        }
                    }
                }
            }
        },
        "/digitalResource/cluster/{clusterId}": {
            "get": {
                "description": "Edit a cluster",
                "operationId": "digitalResource/cluster/read_clusterId_",
                "parameters": [
                    {
                        "name": "clusterId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/digitalResource/properties/cluster"
                        }
                    }
                }
            }
        },
        "/digitalResource/cluster": {
            "post": {
                "description": "Create a new cluster",
                "operationId": "digitalResource/cluster/create",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "cluster"
                            ],
                            "properties": {
                                "cluster": {
                                    "description": "The cluster object",
                                    "$ref": "#/definitions/digitalResource/properties/cluster"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing cluster",
                "operationId": "digitalResource/cluster/update",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "cluster"
                            ],
                            "properties": {
                                "cluster": {
                                    "description": "The cluster object",
                                    "$ref": "#/definitions/digitalResource/properties/cluster"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/digitalResource/contentType": {
            "get": {
                "description": "List content types",
                "operationId": "digitalResource/contentType/read",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "post": {
                "description": "Create the content type",
                "operationId": "digitalResource/contentType/create",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "contentType"
                            ],
                            "properties": {
                                "contentType": {
                                    "$ref": "#/definitions/digitalResource/properties/contentType"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/digitalResource/contentType/{name}": {
            "get": {
                "description": "Get the content type",
                "operationId": "digitalResource/contentType/read_name_",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the content type",
                "operationId": "digitalResource/contentType/update_name_",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "contentType"
                            ],
                            "properties": {
                                "contentType": {
                                    "$ref": "#/definitions/digitalResource/properties/contentType"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/digitalResource/conversionRule/List": {
            "get": {
                "description": "Allow to display all conversion rule",
                "operationId": "digitalResource/conversionRule/readList",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/digitalResource/properties/$conversionRule"
                            }
                        }
                    }
                }
            }
        },
        "/digitalResource/conversionRule/{conversionRuleId}": {
            "get": {
                "description": "Edit a conversion rule",
                "operationId": "digitalResource/conversionRule/read_conversionRuleId_",
                "parameters": [
                    {
                        "name": "conversionRuleId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/digitalResource/properties/conversionRule"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a conversion rule",
                "operationId": "digitalResource/conversionRule/delete_conversionRuleId_",
                "parameters": [
                    {
                        "name": "conversionRuleId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/digitalResource/conversionRule": {
            "post": {
                "description": "Create a new conversion rule",
                "operationId": "digitalResource/conversionRule/create",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "conversionRule"
                            ],
                            "properties": {
                                "conversionRule": {
                                    "description": "The conversion rule object",
                                    "$ref": "#/definitions/digitalResource/properties/conversionRule"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing conversion rule",
                "operationId": "digitalResource/conversionRule/update",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "conversionRule"
                            ],
                            "properties": {
                                "conversionRule": {
                                    "description": "The conversion rule object",
                                    "$ref": "#/definitions/digitalResource/properties/conversionRule"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/digitalResource/digitalResource/Isconvertible": {
            "put": {
                "description": "Check if a resource is convertible",
                "operationId": "digitalResource/digitalResource/updateIsconvertible",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "digitalResource"
                            ],
                            "properties": {
                                "digitalResource": {
                                    "description": "The digital resource object",
                                    "$ref": "#/definitions/digitalResource/properties/digitalResource"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/digitalResource/format/List": {
            "get": {
                "description": "List repositories for administration",
                "operationId": "digitalResource/format/readList",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/digitalResource/properties/format"
                            }
                        }
                    }
                }
            }
        },
        "/digitalResource/format/Find/{query}": {
            "get": {
                "description": "Get the list of type",
                "operationId": "digitalResource/format/readFind_query_",
                "parameters": [
                    {
                        "name": "query",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/digitalResource/format/Get": {
            "get": {
                "description": "Get the format by puid",
                "operationId": "digitalResource/format/readGet",
                "parameters": [
                    {
                        "name": "puid",
                        "in": "query",
                        "description": "The puid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/digitalResource/properties/format"
                        }
                    }
                }
            }
        },
        "/digitalResource/format/Fileformatinformation": {
            "post": {
                "description": "Get the list of type",
                "operationId": "digitalResource/format/createFileformatinformation",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "contents",
                                "extension"
                            ],
                            "properties": {
                                "contents": {
                                    "type": "string"
                                },
                                "extension": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/digitalResource/properties/fileInformation"
                        }
                    }
                }
            }
        },
        "/digitalResource/repository/List": {
            "get": {
                "description": "List repositories for administration",
                "operationId": "digitalResource/repository/readList",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/digitalResource/repository/{repositoryId}": {
            "get": {
                "description": "Edit a repository",
                "operationId": "digitalResource/repository/read_repositoryId_",
                "parameters": [
                    {
                        "name": "repositoryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/digitalResource/repository": {
            "post": {
                "description": "Create a new repository",
                "operationId": "digitalResource/repository/create",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "repository"
                            ],
                            "properties": {
                                "repository": {
                                    "description": "The repository object",
                                    "$ref": "#/definitions/digitalResource/properties/repository"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing repository",
                "operationId": "digitalResource/repository/update",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "repository"
                            ],
                            "properties": {
                                "repository": {
                                    "description": "The repository object",
                                    "$ref": "#/definitions/digitalResource/properties/repository"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/digitalResource/repository/Checkintegrity": {
            "put": {
                "description": "Check the integrty of all resources in a repository",
                "operationId": "digitalResource/repository/updateCheckintegrity",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "repositoryReference"
                            ],
                            "properties": {
                                "repositoryReference": {
                                    "description": "The reference of the repository to check",
                                    "type": "string"
                                },
                                "init": {
                                    "description": "Start an new integrity check or continue from last check",
                                    "type": "boolean"
                                },
                                "addressLimit": {
                                    "description": "The maximum address to check",
                                    "type": "integer"
                                },
                                "maxError": {
                                    "description": "The maximum number of error before the end of the process",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/digitalResource/repository/Flawedaddresses": {
            "get": {
                "description": "Get addesses wich fail the integrity test",
                "operationId": "digitalResource/repository/readFlawedaddresses",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/digitalResource/properties/address"
                        }
                    }
                }
            }
        },
        "/digitalResource/repository/Checkaddressintegrity": {
            "put": {
                "description": "Validate an address integrity",
                "operationId": "digitalResource/repository/updateCheckaddressintegrity",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "address"
                            ],
                            "properties": {
                                "address": {
                                    "description": "The address to check",
                                    "$ref": "#/definitions/digitalResource/properties/address"
                                },
                                "repository": {
                                    "description": "The repository of the address",
                                    "$ref": "#/definitions/digitalResource/properties/repository"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/lifeCycle/eventFormat/Eventformatlist": {
            "get": {
                "description": "Get event format list",
                "operationId": "lifeCycle/eventFormat/readEventformatlist",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/lifeCycle/eventFormat/Eventformat/Edit": {
            "get": {
                "description": "Edit an event format",
                "operationId": "lifeCycle/eventFormat/readEventformatEdit",
                "parameters": [
                    {
                        "name": "eventFormatType",
                        "in": "query",
                        "description": "The event Format type",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lifeCycle/properties/eventFormat"
                        }
                    }
                }
            }
        },
        "/lifeCycle/eventFormat/Eventformat": {
            "post": {
                "description": "Create an event format",
                "operationId": "lifeCycle/eventFormat/createEventformat",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "eventFormat"
                            ],
                            "properties": {
                                "eventFormat": {
                                    "description": "The eventFormat object to record",
                                    "$ref": "#/definitions/lifeCycle/properties/eventFormat"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lifeCycle/properties/eventFormat"
                        }
                    }
                }
            },
            "put": {
                "description": "update an event format",
                "operationId": "lifeCycle/eventFormat/updateEventformat",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "eventFormat"
                            ],
                            "properties": {
                                "eventFormat": {
                                    "description": "The eventFormat object to record",
                                    "$ref": "#/definitions/lifeCycle/properties/eventFormat"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lifeCycle/properties/eventFormat"
                        }
                    }
                }
            }
        },
        "/lifeCycle/eventFormat/Eventformat/{type}": {
            "delete": {
                "description": "Delete an event format",
                "operationId": "lifeCycle/eventFormat/deleteEventformat_type_",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lifeCycle/properties/eventFormat"
                        }
                    }
                }
            }
        },
        "/lifeCycle/event/{eventId}": {
            "get": {
                "description": "Get an events by id",
                "operationId": "lifeCycle/event/read_eventId_",
                "parameters": [
                    {
                        "name": "eventId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/lifeCycle/event/Eventtypelist": {
            "get": {
                "description": "Get eventType list",
                "operationId": "lifeCycle/event/readEventtypelist",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/lifeCycle/event/Search": {
            "get": {
                "description": "Search a journal event",
                "operationId": "lifeCycle/event/readSearch",
                "parameters": [
                    {
                        "name": "eventType",
                        "in": "query",
                        "description": "The type of the event",
                        "type": "string"
                    },
                    {
                        "name": "objectClass",
                        "in": "query",
                        "description": "The class of the object",
                        "type": "string"
                    },
                    {
                        "name": "objectId",
                        "in": "query",
                        "description": "The identifier of the object",
                        "type": "string"
                    },
                    {
                        "name": "minDate",
                        "in": "query",
                        "description": "The minimum date of the event",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "maxDate",
                        "in": "query",
                        "description": "The maximum date of the event",
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/lifeCycle/journal/List": {
            "get": {
                "description": "Read the list of journals",
                "operationId": "lifeCycle/journal/readList",
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "No documentation available"
                    }
                }
            }
        },
        "/lifeCycle/journal/{journalId}": {
            "get": {
                "description": "Get the current journal",
                "operationId": "lifeCycle/journal/read_journalId_",
                "parameters": [
                    {
                        "name": "journalId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "journalId",
                        "in": "query",
                        "description": "The journal identifier",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-z_][a-z0-9\\-_]*$"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The reading offset",
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The maximum number of event to load",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/lifeCycle/properties/event"
                            }
                        }
                    }
                }
            }
        },
        "/lifeCycle/journal/Chainjournal": {
            "post": {
                "description": "Chain the last journal",
                "operationId": "lifeCycle/journal/createChainjournal",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/organization/orgContact/Orgcontact": {
            "post": {
                "description": "Add contact to the organization",
                "operationId": "organization/orgContact/createOrgcontact",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "orgContact"
                            ],
                            "properties": {
                                "orgContact": {
                                    "description": "The organisation contact to record",
                                    "$ref": "#/definitions/organization/properties/orgContact"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/organization/properties/orgContact"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete organization contact",
                "operationId": "organization/orgContact/deleteOrgcontact",
                "parameters": [
                    {
                        "name": "orgContact",
                        "in": "query",
                        "description": "The organisation contact to record",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/organization/properties/orgContact"
                        }
                    }
                }
            }
        },
        "/organization/orgContact/Orgcontact/{orgId}/Org": {
            "get": {
                "description": "Get all organization contacts by organization identifier",
                "operationId": "organization/orgContact/readOrgcontact_orgId_Org",
                "parameters": [
                    {
                        "name": "orgId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/organization/properties/orgContact"
                            }
                        }
                    }
                }
            }
        },
        "/organization/orgContact/Orgcontact/{contactId}/Contact": {
            "get": {
                "description": "Get all organization contacts by contact identifier",
                "operationId": "organization/orgContact/readOrgcontact_contactId_Contact",
                "parameters": [
                    {
                        "name": "contactId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/organization/properties/orgContact"
                            }
                        }
                    }
                }
            }
        },
        "/organization/orgRole/List": {
            "get": {
                "description": "Get the organization roles",
                "operationId": "organization/orgRole/readList",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/organization/orgType/List": {
            "get": {
                "description": "Get the organization types",
                "operationId": "organization/orgType/readList",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/organization/orgType": {
            "post": {
                "description": "Add an org type",
                "operationId": "organization/orgType/create",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "orgType"
                            ],
                            "properties": {
                                "orgType": {
                                    "description": "the orgType to create",
                                    "$ref": "#/definitions/organization/properties/orgType"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/organization/orgType/{code}": {
            "get": {
                "description": "Edit an org type",
                "operationId": "organization/orgType/read_code_",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an org type",
                "operationId": "organization/orgType/update_code_",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "orgType"
                            ],
                            "properties": {
                                "orgType": {
                                    "description": "The orgType to update",
                                    "$ref": "#/definitions/organization/properties/orgType"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/organization/organization/Index": {
            "get": {
                "description": "Index of organizations",
                "operationId": "organization/organization/readIndex",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/organization/organization/Tree": {
            "get": {
                "description": "Tree of organizations",
                "operationId": "organization/organization/readTree",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/organization/properties/organizationTree"
                            }
                        }
                    }
                }
            }
        },
        "/organization/organization/Search": {
            "get": {
                "description": "Search organization",
                "operationId": "organization/organization/readSearch",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "businessType",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "orgRoleCode",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "orgTypeCode",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "registrationNumber",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "taxIdentifier",
                        "in": "query",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/organization/properties/organization"
                            }
                        }
                    }
                }
            }
        },
        "/organization/organization": {
            "post": {
                "description": "Create an organization",
                "operationId": "organization/organization/create",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "organization"
                            ],
                            "properties": {
                                "organization": {
                                    "description": "The organization object to create",
                                    "$ref": "#/definitions/organization/properties/organization"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/organization/organization/{orgId}": {
            "get": {
                "description": "Read an organization by his orgId",
                "operationId": "organization/organization/read_orgId_",
                "parameters": [
                    {
                        "name": "orgId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/organization/properties/organization"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an organization",
                "operationId": "organization/organization/update_orgId_",
                "parameters": [
                    {
                        "name": "orgId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "organization"
                            ],
                            "properties": {
                                "organization": {
                                    "description": "The organization object to update",
                                    "$ref": "#/definitions/organization/properties/organization"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an organization",
                "operationId": "organization/organization/delete_orgId_",
                "parameters": [
                    {
                        "name": "orgId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/organization/organization/Byregnumber": {
            "get": {
                "description": "Get an organization by his regitration number",
                "operationId": "organization/organization/readByregnumber",
                "parameters": [
                    {
                        "name": "registrationNumber",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/organization/properties/organization"
                        }
                    }
                }
            }
        },
        "/organization/organization/Byrole/{role}": {
            "get": {
                "description": "Get organizations by role",
                "operationId": "organization/organization/readByrole_role_",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/organization/properties/organization"
                            }
                        }
                    }
                }
            }
        },
        "/organization/organization/Org/List": {
            "get": {
                "description": "List organisations",
                "operationId": "organization/organization/readOrgList",
                "parameters": [
                    {
                        "name": "role",
                        "in": "query",
                        "description": "The role of organizations",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/organization/organization/Orgunit/List": {
            "get": {
                "description": "List organisations units",
                "operationId": "organization/organization/readOrgunitList",
                "parameters": [
                    {
                        "name": "role",
                        "in": "query",
                        "description": "The role of organizations",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/organization/organization/Userpositions/{orgId}": {
            "get": {
                "description": "Get organization's user positions",
                "operationId": "organization/organization/readUserpositions_orgId_",
                "parameters": [
                    {
                        "name": "orgId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/organization/properties/userPositionTree"
                            }
                        }
                    }
                }
            }
        },
        "/organization/organization/Userposition/{orgId}/{userAccountId}": {
            "post": {
                "description": "Add a user position to an organization",
                "operationId": "organization/organization/createUserposition_orgId__userAccountId_",
                "parameters": [
                    {
                        "name": "orgId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userAccountId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "function": {
                                    "description": "The function of the user",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "delete": {
                "description": "Add a user position to an organization",
                "operationId": "organization/organization/deleteUserposition_orgId__userAccountId_",
                "parameters": [
                    {
                        "name": "orgId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userAccountId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/organization/organization/Serviceposition/{orgId}/{userAccountId}": {
            "post": {
                "description": "Add a service position to an organization",
                "operationId": "organization/organization/createServiceposition_orgId__userAccountId_",
                "parameters": [
                    {
                        "name": "orgId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userAccountId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/organization/organization/Setdefaultposition/{orgId}/{userAccountId}": {
            "put": {
                "description": "Set default user position for an user",
                "operationId": "organization/organization/updateSetdefaultposition_orgId__userAccountId_",
                "parameters": [
                    {
                        "name": "orgId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userAccountId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/organization/organization/Serviceposition/{orgId}/{serviceAccountId}": {
            "delete": {
                "description": "Delete a service position to an organization",
                "operationId": "organization/organization/deleteServiceposition_orgId__serviceAccountId_",
                "parameters": [
                    {
                        "name": "orgId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "serviceAccountId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/organization/organization/Contactposition/{orgId}/{contactId}": {
            "delete": {
                "description": "Delete a contact position to an organization",
                "operationId": "organization/organization/deleteContactposition_orgId__contactId_",
                "parameters": [
                    {
                        "name": "orgId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "contactId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/organization/organization/Servicepositions/{orgId}": {
            "get": {
                "description": "Get organization's service positions",
                "operationId": "organization/organization/readServicepositions_orgId_",
                "parameters": [
                    {
                        "name": "orgId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/organization/properties/servicePosition"
                            }
                        }
                    }
                }
            }
        },
        "/organization/organization/Move/{orgId}": {
            "put": {
                "description": "Move an organization to a new ownerOrg",
                "operationId": "organization/organization/updateMove_orgId_",
                "parameters": [
                    {
                        "name": "orgId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "newParentOrgId": {
                                    "description": "The new parent organization identifier",
                                    "type": "string"
                                },
                                "newOwnerOrgId": {
                                    "description": "The new owner organization identifier",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/organization/organization/{orgId}/Addresses": {
            "get": {
                "description": "Get an organization addresses",
                "operationId": "organization/organization/read_orgId_Addresses",
                "parameters": [
                    {
                        "name": "orgId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/contact/properties/address"
                            }
                        }
                    }
                }
            }
        },
        "/organization/organization/{orgId}/Communications": {
            "get": {
                "description": "Get an organization communications",
                "operationId": "organization/organization/read_orgId_Communications",
                "parameters": [
                    {
                        "name": "orgId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/contact/properties/communication"
                            }
                        }
                    }
                }
            }
        },
        "/organization/organization/{orgId}/Contacts": {
            "get": {
                "description": "Get an organization contacts",
                "operationId": "organization/organization/read_orgId_Contacts",
                "parameters": [
                    {
                        "name": "orgId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/contact/properties/contact"
                            }
                        }
                    }
                }
            }
        },
        "/organization/organization/{orgId}/Contact": {
            "post": {
                "description": "Add an organization contact",
                "operationId": "organization/organization/create_orgId_Contact",
                "parameters": [
                    {
                        "name": "orgId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "contact",
                                "isSelf"
                            ],
                            "properties": {
                                "contact": {
                                    "type": "object"
                                },
                                "isSelf": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/organization/organization/{orgId}/Archivalprofileaccess": {
            "put": {
                "description": "Add an organization archival profile access",
                "operationId": "organization/organization/update_orgId_Archivalprofileaccess",
                "parameters": [
                    {
                        "name": "orgId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "archivalProfileAccess"
                            ],
                            "properties": {
                                "archivalProfileAccess": {
                                    "description": "The archival profile access array",
                                    "type": "array"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/organization/organization/Orgunitprofiles": {
            "get": {
                "description": "Get the profiles by orgRegNumber",
                "operationId": "organization/organization/readOrgunitprofiles",
                "parameters": [
                    {
                        "name": "orgRegNumber",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "originatorAccess",
                        "in": "query",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/organization/organization/Userpositions/{accountId}": {
            "get": {
                "description": "Get the user postions by accountId",
                "operationId": "organization/organization/readUserpositions_accountId_",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/organization/properties/userPositionTree"
                            }
                        }
                    }
                }
            }
        },
        "/organization/organization/Todisplay": {
            "get": {
                "description": "List of organizations",
                "operationId": "organization/organization/readTodisplay",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/organization/servicePosition/Current/{orgId}": {
            "put": {
                "description": "Set the user current org unit",
                "operationId": "organization/servicePosition/updateCurrent_orgId_",
                "parameters": [
                    {
                        "name": "orgId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/organization/servicePosition": {
            "get": {
                "description": "Get the user current org unit",
                "operationId": "organization/servicePosition/read",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/organization/servicePosition/{serviceAccountId}": {
            "get": {
                "description": "Get the user current org unit",
                "operationId": "organization/servicePosition/read_serviceAccountId_",
                "parameters": [
                    {
                        "name": "serviceAccountId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/organization/servicePosition/Orgs": {
            "get": {
                "description": "Get the user org ids",
                "operationId": "organization/servicePosition/readOrgs",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/organization/servicePosition/Services": {
            "get": {
                "description": "Get the user org ids",
                "operationId": "organization/servicePosition/readServices",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/organization/userPosition/Current/{orgId}": {
            "put": {
                "description": "Set the user current org unit",
                "operationId": "organization/userPosition/updateCurrent_orgId_",
                "parameters": [
                    {
                        "name": "orgId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/organization/userPosition": {
            "get": {
                "description": "Get the user current org unit",
                "operationId": "organization/userPosition/read",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/organization/userPosition/Getcurrentorgtree": {
            "get": {
                "description": "Get my current organization tree",
                "operationId": "organization/userPosition/readGetcurrentorgtree",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/organization/properties/organization"
                        }
                    }
                }
            }
        },
        "/organization/userPosition/Orgs": {
            "get": {
                "description": "Get the user org ids",
                "operationId": "organization/userPosition/readOrgs",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/organization/userPosition/Services": {
            "get": {
                "description": "Get the user org ids",
                "operationId": "organization/userPosition/readServices",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/organization/userPosition/Descendantservices": {
            "get": {
                "description": "Get the user descendant services orgRegNumber",
                "operationId": "organization/userPosition/readDescendantservices",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/organization/userPosition/Descendantorgs": {
            "get": {
                "description": "Get the user descendant org orgRegNumber",
                "operationId": "organization/userPosition/readDescendantorgs",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/organization/userPosition/Descendantprofiles": {
            "get": {
                "description": "Get descendant profiles",
                "operationId": "organization/userPosition/readDescendantprofiles",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/recordsManagement/Code/Generate": {
            "post": {
                "description": "Generate file with code",
                "operationId": "recordsManagement/Code/createGenerate",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "data",
                                "label"
                            ],
                            "properties": {
                                "data": {
                                    "description": "The data of codes",
                                    "type": "string"
                                },
                                "label": {
                                    "description": "The label",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/recordsManagement/accessRule/Index": {
            "get": {
                "description": "List the access rule's code",
                "operationId": "recordsManagement/accessRule/readIndex",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/recordsManagement/properties/accessRule"
                        }
                    }
                }
            }
        },
        "/recordsManagement/accessRule/{code}": {
            "get": {
                "description": "Edit an access code",
                "operationId": "recordsManagement/accessRule/read_code_",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/recordsManagement/properties/accessRule"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete an access code",
                "operationId": "recordsManagement/accessRule/delete_code_",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/recordsManagement/accessRule": {
            "post": {
                "description": "create an access code",
                "operationId": "recordsManagement/accessRule/create",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "accessRule"
                            ],
                            "properties": {
                                "accessRule": {
                                    "description": "The access code",
                                    "$ref": "#/definitions/recordsManagement/properties/accessRule"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "put": {
                "description": "update an access code",
                "operationId": "recordsManagement/accessRule/update",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "accessRule"
                            ],
                            "properties": {
                                "accessRule": {
                                    "description": "The access code",
                                    "$ref": "#/definitions/recordsManagement/properties/accessRule"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/recordsManagement/archivalProfile/Index": {
            "get": {
                "description": "List the profiles",
                "operationId": "recordsManagement/archivalProfile/readIndex",
                "parameters": [
                    {
                        "name": "withRightsChecking",
                        "in": "query",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/recordsManagement/properties/archivalProfile"
                            }
                        }
                    }
                }
            }
        },
        "/recordsManagement/archivalProfile/New": {
            "get": {
                "description": "New profile",
                "operationId": "recordsManagement/archivalProfile/readNew",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/recordsManagement/properties/archivalProfile"
                        }
                    }
                }
            }
        },
        "/recordsManagement/archivalProfile/{archivalProfileId}": {
            "get": {
                "description": "Edit a archival profile",
                "operationId": "recordsManagement/archivalProfile/read_archivalProfileId_",
                "parameters": [
                    {
                        "name": "archivalProfileId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "withRelatedProfiles",
                        "in": "query",
                        "description": "Bring back the children profiles",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/recordsManagement/properties/archivalProfile"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete an archival profile",
                "operationId": "recordsManagement/archivalProfile/delete_archivalProfileId_",
                "parameters": [
                    {
                        "name": "archivalProfileId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/recordsManagement/archivalProfile/Byreference/{reference}": {
            "get": {
                "description": "Edit a archival profile",
                "operationId": "recordsManagement/archivalProfile/readByreference_reference_",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/recordsManagement/properties/archivalProfile"
                        }
                    }
                }
            }
        },
        "/recordsManagement/archivalProfile/Profiledescription/{archivalProfileReference}": {
            "get": {
                "description": "Read a profile description",
                "operationId": "recordsManagement/archivalProfile/readProfiledescription_archivalProfileReference_",
                "parameters": [
                    {
                        "name": "archivalProfileReference",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/recordsManagement/properties/archivalProfile"
                        }
                    }
                }
            }
        },
        "/recordsManagement/archivalProfile": {
            "post": {
                "description": "create a archival profile",
                "operationId": "recordsManagement/archivalProfile/create",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "archivalProfile"
                            ],
                            "properties": {
                                "archivalProfile": {
                                    "description": "The archival profile object",
                                    "$ref": "#/definitions/recordsManagement/properties/archivalProfile"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "put": {
                "description": "update a archival profile",
                "operationId": "recordsManagement/archivalProfile/update",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "archivalProfile"
                            ],
                            "properties": {
                                "archivalProfile": {
                                    "description": "The archival profile object",
                                    "$ref": "#/definitions/recordsManagement/properties/archivalProfile"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/recordsManagement/archiveCompliance/Periodic": {
            "get": {
                "description": "Archive compliance",
                "operationId": "recordsManagement/archiveCompliance/readPeriodic",
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "No documentation available"
                    }
                }
            }
        },
        "/recordsManagement/archiveDescription/{archiveId}": {
            "get": {
                "description": "View the archive",
                "operationId": "recordsManagement/archiveDescription/read_archiveId_",
                "parameters": [
                    {
                        "name": "archiveId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/recordsManagement/properties/archive"
                        }
                    }
                }
            }
        },
        "/recordsManagement/archive": {
            "post": {
                "description": "Create an archive",
                "operationId": "recordsManagement/archive/create",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "archive"
                            ],
                            "properties": {
                                "archive": {
                                    "description": "The archive object",
                                    "$ref": "#/definitions/recordsManagement/properties/archive"
                                },
                                "zipContainer": {
                                    "description": "The archive is a zip container",
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No documentation available"
                    }
                }
            }
        },
        "/recordsManagement/archive/Archivebatch": {
            "post": {
                "description": "Receive an archive",
                "operationId": "recordsManagement/archive/createArchivebatch",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "batchDirectory",
                                "descriptionFilePath"
                            ],
                            "properties": {
                                "batchDirectory": {
                                    "description": "The path of the folder that contains archives",
                                    "type": "string"
                                },
                                "descriptionFilePath": {
                                    "description": "The path of the description file",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/recordsManagement/archive/Document/{docId}": {
            "get": {
                "description": "Retrieve an archive document by its id",
                "operationId": "recordsManagement/archive/readDocument_docId_",
                "parameters": [
                    {
                        "name": "docId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No documentation available"
                    }
                }
            }
        },
        "/recordsManagement/archive/Consultation/{archiveId}/Digital/Resource/{resId}": {
            "get": {
                "description": "Retrieve an archive resource by its id",
                "operationId": "recordsManagement/archive/readConsultation_archiveId_DigitalResource_resId_",
                "parameters": [
                    {
                        "name": "archiveId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "resId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/digitalResource/properties/digitalResource"
                        }
                    }
                }
            }
        },
        "/recordsManagement/archive/{archiveId}": {
            "get": {
                "description": "Retrieve an archive by its id",
                "operationId": "recordsManagement/archive/read_archiveId_",
                "parameters": [
                    {
                        "name": "archiveId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/recordsManagement/properties/archive"
                        }
                    }
                }
            }
        },
        "/recordsManagement/archive/Contents/{archiveId}/{resId}": {
            "get": {
                "description": "Retrieve an archive content document (CDO)",
                "operationId": "recordsManagement/archive/readContents_archiveId__resId_",
                "parameters": [
                    {
                        "name": "archiveId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "resId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/digitalResource/properties/digitalResource"
                        }
                    }
                }
            }
        },
        "/recordsManagement/archive/{archiveId}/Exists": {
            "get": {
                "description": "Check if archive exists",
                "operationId": "recordsManagement/archive/read_archiveId_Exists",
                "parameters": [
                    {
                        "name": "archiveId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/recordsManagement/archive/{archiveId}/Retentionrule": {
            "get": {
                "description": "Read the retention rule of archive",
                "operationId": "recordsManagement/archive/read_archiveId_Retentionrule",
                "parameters": [
                    {
                        "name": "archiveId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/recordsManagement/properties/archiveRetentionRule"
                        }
                    }
                }
            }
        },
        "/recordsManagement/archive/Accessrule/{archiveId}": {
            "get": {
                "description": "Read the access rule of archive",
                "operationId": "recordsManagement/archive/readAccessrule_archiveId_",
                "parameters": [
                    {
                        "name": "archiveId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/recordsManagement/properties/archiveAccessRule"
                        }
                    }
                }
            }
        },
        "/recordsManagement/archive/Index": {
            "put": {
                "description": "Update the archive index",
                "operationId": "recordsManagement/archive/updateIndex",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "index"
                            ],
                            "properties": {
                                "index": {}
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/recordsManagement/archive/Interactiveconversion/{resId}": {
            "put": {
                "description": "Convert and store a resource",
                "operationId": "recordsManagement/archive/updateInteractiveconversion_resId_",
                "parameters": [
                    {
                        "name": "resId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/digitalResource/properties/digitalResource"
                        }
                    }
                }
            }
        },
        "/recordsManagement/archiveRelationship/Relationship": {
            "post": {
                "description": "Create a relationship",
                "operationId": "recordsManagement/archiveRelationship/createRelationship",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "archiveRelationship"
                            ],
                            "properties": {
                                "archiveRelationship": {
                                    "description": "The archive relationship object",
                                    "$ref": "#/definitions/recordsManagement/properties/archiveRelationShip"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a relationship",
                "operationId": "recordsManagement/archiveRelationship/deleteRelationship",
                "parameters": [
                    {
                        "name": "archiveRelationship",
                        "in": "query",
                        "description": "The archive relationship object",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/recordsManagement/properties/archiveRelationship"
                        }
                    }
                }
            }
        },
        "/recordsManagement/archives": {
            "get": {
                "description": "Search archives by profile / dates / agreement",
                "operationId": "recordsManagement/archives/read",
                "parameters": [
                    {
                        "name": "archiveId",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "profileReference",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "archiveName",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "agreementReference",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "archiveExpired",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "finalDisposition",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "originatorOrgRegNumber",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "originatorOwnerOrgId",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "originatorArchiveId",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "originatingDate",
                        "in": "query",
                        "type": "array"
                    },
                    {
                        "name": "filePlanPosition",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "hasParent",
                        "in": "query",
                        "type": "boolean"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "text",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "partialRetentionRule",
                        "in": "query",
                        "type": "boolean"
                    },
                    {
                        "name": "retentionRuleCode",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "depositStartDate",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "depositEndDate",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "originatingStartDate",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "originatingEndDate",
                        "in": "query",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/recordsManagement/properties/archive"
                            }
                        }
                    }
                }
            }
        },
        "/recordsManagement/archives/Freeze": {
            "put": {
                "description": "Suspend archives",
                "operationId": "recordsManagement/archives/updateFreeze",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "archiveIds"
                            ],
                            "properties": {
                                "archiveIds": {
                                    "description": "Array of archive identifier",
                                    "type": "array"
                                },
                                "comment": {
                                    "description": "The comment of modification",
                                    "type": "string"
                                },
                                "identifiant": {
                                    "description": "Message identifiant",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/recordsManagement/archives/Unfreeze": {
            "put": {
                "description": "Change the status of an archive",
                "operationId": "recordsManagement/archives/updateUnfreeze",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "archiveIds"
                            ],
                            "properties": {
                                "archiveIds": {
                                    "description": "Array of archive identifier",
                                    "type": "string"
                                },
                                "comment": {
                                    "description": "The comment of modification",
                                    "type": "string"
                                },
                                "identifiant": {
                                    "description": "Message identifiant",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/recordsManagement/archives/Retentionrule": {
            "get": {
                "description": "Read the retention rule of multiple archives",
                "operationId": "recordsManagement/archives/readRetentionrule",
                "parameters": [
                    {
                        "name": "archiveIds",
                        "in": "query",
                        "description": "Array of archive identifier or sigle archive identifier",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/recordsManagement/properties/archiveRetentionRule"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a retention rule",
                "operationId": "recordsManagement/archives/updateRetentionrule",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "retentionRule",
                                "archiveIds"
                            ],
                            "properties": {
                                "retentionRule": {
                                    "description": "The retention rule object",
                                    "$ref": "#/definitions/recordsManagement/properties/archiveRetentionRule"
                                },
                                "archiveIds": {
                                    "description": "The archives ids",
                                    "type": "array"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/recordsManagement/archives/Find": {
            "get": {
                "description": "Find archives",
                "operationId": "recordsManagement/archives/readFind",
                "parameters": [
                    {
                        "name": "description",
                        "in": "query",
                        "description": "The query string with arguments",
                        "type": "string"
                    },
                    {
                        "name": "text",
                        "in": "query",
                        "description": "The query string for text search",
                        "type": "string"
                    },
                    {
                        "name": "profile",
                        "in": "query",
                        "description": "The profile name",
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The result limit",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No documentation available"
                    }
                }
            }
        },
        "/recordsManagement/archives/Accessrule": {
            "get": {
                "description": "Read the access rule of multiple archives",
                "operationId": "recordsManagement/archives/readAccessrule",
                "parameters": [
                    {
                        "name": "archiveIds",
                        "in": "query",
                        "description": "Array of archive identifier or sigle archive identifier",
                        "required": true,
                        "type": "array"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/recordsManagement/properties/archiveAccessRule"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a access rule",
                "operationId": "recordsManagement/archives/updateAccessrule",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "accessRule"
                            ],
                            "properties": {
                                "accessRule": {
                                    "description": "The access rule object",
                                    "$ref": "#/definitions/recordsManagement/properties/archiveAccessRule"
                                },
                                "archiveIds": {
                                    "description": "The archives ids",
                                    "type": "array"
                                },
                                "comment": {
                                    "description": "The comment of modification",
                                    "type": "string"
                                },
                                "identifiant": {
                                    "description": "Message identifiant",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/recordsManagement/archives/Setforrestitution": {
            "put": {
                "description": "Flag archives for restitution",
                "operationId": "recordsManagement/archives/updateSetforrestitution",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "archiveIds"
                            ],
                            "properties": {
                                "archiveIds": {
                                    "description": "Array of archive identifier",
                                    "type": "array"
                                },
                                "identifiant": {
                                    "description": "The message reference",
                                    "type": "string"
                                },
                                "comment": {
                                    "description": "A comment",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/recordsManagement/archives/Disposearchives": {
            "put": {
                "description": "Flag archives for disposal",
                "operationId": "recordsManagement/archives/updateDisposearchives",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "archiveIds"
                            ],
                            "properties": {
                                "archiveIds": {
                                    "description": "The archives ids",
                                    "type": "array"
                                },
                                "comment": {
                                    "description": "The comment of modification",
                                    "type": "string"
                                },
                                "identifiant": {
                                    "description": "Message identifiant",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete disposable archives",
                "operationId": "recordsManagement/archives/deleteDisposearchives",
                "parameters": [
                    {
                        "name": "archiveIds",
                        "in": "query",
                        "description": "The archives ids",
                        "required": true,
                        "type": "array"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/recordsManagement/properties/archive"
                            }
                        }
                    }
                }
            }
        },
        "/recordsManagement/archives/Disposablearchives": {
            "delete": {
                "description": "Delete disposable archives",
                "operationId": "recordsManagement/archives/deleteDisposablearchives",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/recordsManagement/properties/archive"
                            }
                        }
                    }
                }
            }
        },
        "/recordsManagement/archives/Cancel/Destruction": {
            "put": {
                "description": "Cancel archives destruction",
                "operationId": "recordsManagement/archives/updateCancelDestruction",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "archiveIds"
                            ],
                            "properties": {
                                "archiveIds": {
                                    "description": "Array of archive identifier",
                                    "type": "array"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/recordsManagement/archives/Documentsconversion": {
            "put": {
                "description": "Flag archives for conversion",
                "operationId": "recordsManagement/archives/updateDocumentsconversion",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "documentIds"
                            ],
                            "properties": {
                                "documentIds": {
                                    "description": "Array of document identifier",
                                    "type": "array"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No documentation available"
                    }
                }
            }
        },
        "/recordsManagement/archives/Integritycheck": {
            "get": {
                "description": "Verify archives integrity",
                "operationId": "recordsManagement/archives/readIntegritycheck",
                "parameters": [
                    {
                        "name": "archiveIds",
                        "in": "query",
                        "description": "Array of archive identifier",
                        "required": true,
                        "type": "array"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/recordsManagement/archives/Folder": {
            "get": {
                "description": "Get archives by file plan position",
                "operationId": "recordsManagement/archives/readFolder",
                "parameters": [
                    {
                        "name": "orgRegNumber",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "folderId",
                        "in": "query",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/recordsManagement/archives/Metadata": {
            "put": {
                "description": "Update metadata of archive",
                "operationId": "recordsManagement/archives/updateMetadata",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "archiveId"
                            ],
                            "properties": {
                                "archiveId": {
                                    "type": "string"
                                },
                                "originatorArchiveId": {
                                    "type": "string"
                                },
                                "archiveName": {
                                    "type": "string"
                                },
                                "originatingDate": {
                                    "type": "string",
                                    "format": "date"
                                },
                                "description": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/recordsManagement/archives/Archivecontents/{archive}": {
            "get": {
                "description": "List an archive resources and children archives",
                "operationId": "recordsManagement/archives/readArchivecontents_archive_",
                "parameters": [
                    {
                        "name": "archive",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/recordsManagement/archives/Indexfulltext": {
            "put": {
                "description": "Index full text",
                "operationId": "recordsManagement/archives/updateIndexfulltext",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "limit": {
                                    "description": "The maximum number of archive to index",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/recordsManagement/descriptionClass/Index": {
            "get": {
                "description": "Get the description class",
                "operationId": "recordsManagement/descriptionClass/readIndex",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/recordsManagement/descriptionField/Index": {
            "get": {
                "description": "List the description field's code",
                "operationId": "recordsManagement/descriptionField/readIndex",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/recordsManagement/properties/descriptionField"
                            }
                        }
                    }
                }
            }
        },
        "/recordsManagement/descriptionField": {
            "post": {
                "description": "Create a description field",
                "operationId": "recordsManagement/descriptionField/create",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "descriptionField"
                            ],
                            "properties": {
                                "descriptionField": {
                                    "description": "The description field",
                                    "$ref": "#/definitions/recordsManagement/properties/descriptionField"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a description field",
                "operationId": "recordsManagement/descriptionField/update",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "descriptionField"
                            ],
                            "properties": {
                                "descriptionField": {
                                    "description": "The description field",
                                    "$ref": "#/definitions/recordsManagement/properties/descriptionField"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/recordsManagement/descriptionField/{name}": {
            "get": {
                "description": "Read a description field",
                "operationId": "recordsManagement/descriptionField/read_name_",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/recordsManagement/properties/descriptionField"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a description field",
                "operationId": "recordsManagement/descriptionField/delete_name_",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/recordsManagement/log/Depositjournal": {
            "post": {
                "description": "Deposit a log file",
                "operationId": "recordsManagement/log/createDepositjournal",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "journalFileName",
                                "fromDate",
                                "toDate",
                                "type"
                            ],
                            "properties": {
                                "journalFileName": {
                                    "description": "The name of the journal to deposit",
                                    "type": "string"
                                },
                                "fromDate": {
                                    "description": "The journal start date",
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "toDate": {
                                    "description": "The journal end date",
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "type": {
                                    "description": "The tye of the journal (system, lifeCycle, application)",
                                    "type": "string"
                                },
                                "processName": {
                                    "description": "The journal process name",
                                    "type": "string"
                                },
                                "timestampFileName": {
                                    "description": "The name of the timestamp file",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/recordsManagement/retentionRule/Index": {
            "get": {
                "description": "List the retention rules",
                "operationId": "recordsManagement/retentionRule/readIndex",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/recordsManagement/properties/retentionRule"
                            }
                        }
                    }
                }
            }
        },
        "/recordsManagement/retentionRule": {
            "post": {
                "description": "Create a retention orule",
                "operationId": "recordsManagement/retentionRule/create",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "retentionRule"
                            ],
                            "properties": {
                                "retentionRule": {
                                    "description": "The retention rule",
                                    "$ref": "#/definitions/recordsManagement/properties/retentionRule"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a retention rule",
                "operationId": "recordsManagement/retentionRule/update",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "retentionRule"
                            ],
                            "properties": {
                                "retentionRule": {
                                    "description": "The retention rule",
                                    "$ref": "#/definitions/recordsManagement/properties/retentionRule"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/recordsManagement/retentionRule/{code}": {
            "get": {
                "description": "Read a retention rule",
                "operationId": "recordsManagement/retentionRule/read_code_",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/recordsManagement/properties/retentionRule"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an retention rule",
                "operationId": "recordsManagement/retentionRule/delete_code_",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/recordsManagement/serviceLevel/Index": {
            "get": {
                "description": "Get all service levels",
                "operationId": "recordsManagement/serviceLevel/readIndex",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/recordsManagement/properties/serviceLevel"
                            }
                        }
                    }
                }
            }
        },
        "/recordsManagement/serviceLevel": {
            "get": {
                "description": "Add a new service level",
                "operationId": "recordsManagement/serviceLevel/read",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/recordsManagement/properties/serviceLevel"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a service level",
                "operationId": "recordsManagement/serviceLevel/create",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "serviceLevel"
                            ],
                            "properties": {
                                "serviceLevel": {
                                    "description": "The service level to create",
                                    "$ref": "#/definitions/recordsManagement/properties/serviceLevel"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a service level",
                "operationId": "recordsManagement/serviceLevel/update",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "serviceLevel"
                            ],
                            "properties": {
                                "serviceLevel": {
                                    "description": "The service level to update",
                                    "$ref": "#/definitions/recordsManagement/properties/serviceLevel"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/recordsManagement/serviceLevel/{serviceLevelId}": {
            "get": {
                "description": "Retrieve the service level object by its id",
                "operationId": "recordsManagement/serviceLevel/read_serviceLevelId_",
                "parameters": [
                    {
                        "name": "serviceLevelId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/recordsManagement/properties/serviceLevel"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a service level",
                "operationId": "recordsManagement/serviceLevel/delete_serviceLevelId_",
                "parameters": [
                    {
                        "name": "serviceLevelId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/recordsManagement/serviceLevel/_/Default": {
            "get": {
                "description": "Retrieve the default service level",
                "operationId": "recordsManagement/serviceLevel/read_Default",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/recordsManagement/properties/serviceLevel"
                        }
                    }
                }
            }
        },
        "/recordsManagement/serviceLevel/Setdefault/{serviceLevelId}": {
            "put": {
                "description": "Set the default status to a service level",
                "operationId": "recordsManagement/serviceLevel/updateSetdefault_serviceLevelId_",
                "parameters": [
                    {
                        "name": "serviceLevelId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/recordsManagement/properties/serviceLevel"
                        }
                    }
                }
            }
        },
        "/filePlan/filePlan/Tree": {
            "get": {
                "description": "Get the file plan's list",
                "operationId": "filePlan/filePlan/readTree",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array"
                        }
                    }
                }
            }
        },
        "/filePlan/filePlan": {
            "post": {
                "description": "Create a folder",
                "operationId": "filePlan/filePlan/create",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "folder"
                            ],
                            "properties": {
                                "folder": {
                                    "description": "The new folder",
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a folder",
                "operationId": "filePlan/filePlan/update",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "folder"
                            ],
                            "properties": {
                                "folder": {
                                    "description": "The folder to update",
                                    "type": "object"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/filePlan/filePlan/Move/{folderId}": {
            "put": {
                "description": "Move a folder on a new position",
                "operationId": "filePlan/filePlan/updateMove_folderId_",
                "parameters": [
                    {
                        "name": "folderId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "parentFolderId": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/filePlan/filePlan/{folder}": {
            "delete": {
                "description": "Delete a folder",
                "operationId": "filePlan/filePlan/delete_folder_",
                "parameters": [
                    {
                        "name": "folder",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "audit": {
            "type": "object",
            "properties": {
                "event": {
                    "type": "object",
                    "description": "audit event definition",
                    "properties": {
                        "eventId": {
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "eventDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "accountId": {
                            "description": "The current user account if available",
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "path": {
                            "description": "The service path <bundle>/<api>/<path>",
                            "type": "string"
                        },
                        "orgRegNumber": {
                            "description": "The organization registration number",
                            "type": "string"
                        },
                        "orgUnitRegNumber": {
                            "description": "The orgUnit registration number",
                            "type": "string"
                        },
                        "input": {
                            "description": "The revealant input data",
                            "type": "string"
                        },
                        "variables": {
                            "description": "Variables",
                            "type": "string"
                        },
                        "output": {
                            "description": "The revealant output data",
                            "type": "string"
                        },
                        "status": {
                            "description": "The success or failure of requested action. Depends on the return (normal or budsiness exception)",
                            "type": "boolean"
                        },
                        "info": {
                            "description": "The information associated with the event: remote IP address, process id, name, system user id...",
                            "type": "string"
                        },
                        "instanceName": {
                            "description": "The instance name",
                            "type": "string"
                        }
                    }
                }
            }
        },
        "auth": {
            "type": "object",
            "properties": {
                "publicUserStory": {
                    "type": "object",
                    "description": "Class model that represents the public user story",
                    "properties": {
                        "userStory": {
                            "description": "The userStory",
                            "type": "string"
                        }
                    }
                },
                "role": {
                    "type": "object",
                    "description": "auth role definition",
                    "properties": {
                        "roleId": {
                            "description": "The role identifier",
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "roleName": {
                            "description": "The role name",
                            "type": "string"
                        },
                        "description": {
                            "description": "The role description",
                            "type": "string"
                        },
                        "enabled": {
                            "description": "Status of role",
                            "type": "boolean"
                        },
                        "privileges": {
                            "description": "Array of user story names",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "roleMembers": {
                            "description": "Array of role member object",
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "^[a-z_][a-z0-9\\-_]*$"
                            }
                        }
                    }
                },
                "roleMember": {
                    "type": "object",
                    "description": "auth roleMember definition",
                    "properties": {
                        "userAccountId": {
                            "description": "The user's identifier",
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "roleId": {
                            "description": "The user's identifier",
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        }
                    }
                },
                "account": {
                    "type": "object",
                    "description": "auth userAccount definition",
                    "required": [
                        "accountId",
                        "accountName",
                        "displayName"
                    ],
                    "properties": {
                        "accountId": {
                            "description": "The account identifier",
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "accountName": {
                            "type": "string"
                        },
                        "displayName": {
                            "description": "The displayed name",
                            "type": "string"
                        },
                        "emailAddress": {
                            "type": "string"
                        },
                        "accountType": {
                            "type": "string",
                            "enum": [
                                "user",
                                "service"
                            ]
                        },
                        "enabled": {
                            "type": "boolean"
                        },
                        "password": {
                            "type": "string"
                        },
                        "passwordLastChange": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "passwordChangeRequired": {
                            "type": "boolean"
                        },
                        "locked": {
                            "type": "boolean"
                        },
                        "lockDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "badPasswordCount": {
                            "type": "integer"
                        },
                        "lastLogin": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "lastIp": {
                            "type": "string"
                        },
                        "replacingUserAccountId": {
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "firstName": {
                            "description": "The user fisrt name (given name)",
                            "type": "string"
                        },
                        "lastName": {
                            "description": "The user last name (family name, surname)",
                            "type": "string"
                        },
                        "title": {
                            "description": "The person title (civility)",
                            "type": "string"
                        },
                        "salt": {
                            "type": "string"
                        },
                        "tokenDate": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                },
                "serviceAccount": {
                    "type": "object",
                    "description": "auth serviceAccount message \u0153definition",
                    "properties": {
                        "accountId": {
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "accountName": {
                            "type": "string"
                        },
                        "displayName": {
                            "type": "string"
                        },
                        "accountType": {
                            "type": "string"
                        },
                        "emailAddress": {
                            "type": "string"
                        },
                        "enabled": {
                            "type": "boolean"
                        }
                    }
                },
                "newUserAccount": {
                    "type": "object",
                    "description": "newUserAccount message",
                    "required": [
                        "accountName",
                        "displayName"
                    ],
                    "properties": {
                        "accountName": {
                            "type": "string"
                        },
                        "password": {
                            "type": "string"
                        },
                        "emailAddress": {
                            "type": "string"
                        },
                        "passwordLastChange": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "passwordChangeRequired": {
                            "type": "boolean"
                        },
                        "locked": {
                            "type": "boolean"
                        },
                        "enabled": {
                            "type": "boolean"
                        },
                        "badPasswordCount": {
                            "type": "integer"
                        },
                        "lastLogin": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "lastIp": {
                            "type": "string"
                        },
                        "replacingUserAccountId": {
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "roles": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "^[a-z_][a-z0-9\\-_]*$"
                            }
                        },
                        "organizations": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "^[a-z_][a-z0-9\\-_]*$"
                            }
                        },
                        "firstName": {
                            "description": "The user fisrt name (given name)",
                            "type": "string"
                        },
                        "lastName": {
                            "description": "The user last name (family name, surname)",
                            "type": "string"
                        },
                        "displayName": {
                            "description": "The displayed name",
                            "type": "string"
                        },
                        "title": {
                            "description": "The person title (civility)",
                            "type": "string"
                        }
                    }
                },
                "userAccount": {
                    "type": "object",
                    "description": "userAccount message",
                    "required": [
                        "accountId",
                        "accountName",
                        "accountType",
                        "emailAddress",
                        "displayName"
                    ],
                    "properties": {
                        "accountId": {
                            "description": "The user account identifier",
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "accountName": {
                            "type": "string"
                        },
                        "accountType": {
                            "type": "string"
                        },
                        "emailAddress": {
                            "type": "string"
                        },
                        "passwordLastChange": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "passwordChangeRequired": {
                            "type": "boolean"
                        },
                        "locked": {
                            "type": "boolean"
                        },
                        "enabled": {
                            "type": "boolean"
                        },
                        "badPasswordCount": {
                            "type": "integer"
                        },
                        "lastLogin": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "lastIp": {
                            "type": "string"
                        },
                        "replacingUserAccountId": {
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "roles": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "^[a-z_][a-z0-9\\-_]*$"
                            }
                        },
                        "organizations": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "^[a-z_][a-z0-9\\-_]*$"
                            }
                        },
                        "firstName": {
                            "description": "The user fisrt name (given name)",
                            "type": "string"
                        },
                        "lastName": {
                            "description": "The user last name (family name, surname)",
                            "type": "string"
                        },
                        "displayName": {
                            "description": "The displayed name",
                            "type": "string"
                        },
                        "title": {
                            "description": "The person title (civility)",
                            "type": "string"
                        }
                    }
                },
                "userAccountUpdate": {
                    "type": "object",
                    "description": "userAccount message",
                    "required": [
                        "accountId",
                        "accountName",
                        "emailAddress",
                        "displayName"
                    ],
                    "properties": {
                        "accountId": {
                            "description": "The user account identifier",
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "accountName": {
                            "type": "string"
                        },
                        "emailAddress": {
                            "type": "string"
                        },
                        "roles": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "^[a-z_][a-z0-9\\-_]*$"
                            }
                        },
                        "organizations": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "^[a-z_][a-z0-9\\-_]*$"
                            }
                        },
                        "firstName": {
                            "description": "The user fisrt name (given name)",
                            "type": "string"
                        },
                        "lastName": {
                            "description": "The user last name (family name, surname)",
                            "type": "string"
                        },
                        "displayName": {
                            "description": "The displayed name",
                            "type": "string"
                        },
                        "title": {
                            "description": "The person title (civility)",
                            "type": "string"
                        }
                    }
                }
            }
        },
        "batchProcessing": {
            "type": "object",
            "properties": {
                "logScheduling": {
                    "type": "object",
                    "required": [
                        "logId",
                        "schedulingId",
                        "executedBy",
                        "launchedBy",
                        "logDate"
                    ],
                    "properties": {
                        "logId": {
                            "description": "The task identifier",
                            "type": "string"
                        },
                        "schedulingId": {
                            "description": "The schudeling identifier",
                            "type": "string"
                        },
                        "executedBy": {
                            "description": "The description",
                            "type": "string"
                        },
                        "launchedBy": {
                            "description": "The description",
                            "type": "string"
                        },
                        "logDate": {
                            "description": "The description",
                            "type": "string",
                            "format": "date-time"
                        },
                        "status": {
                            "description": "The description",
                            "type": "boolean"
                        },
                        "info": {
                            "description": "The description",
                            "type": "string"
                        }
                    }
                },
                "scheduling": {
                    "type": "object",
                    "properties": {
                        "schedulingId": {
                            "description": "The scheduling identifier",
                            "type": "string"
                        },
                        "name": {
                            "description": "The name",
                            "type": "string"
                        },
                        "taskId": {
                            "description": "The task identifier",
                            "type": "string"
                        },
                        "frequency": {
                            "description": "The frequency of task",
                            "type": "string"
                        },
                        "parameters": {
                            "description": "The parameters",
                            "type": "string"
                        },
                        "executedBy": {
                            "description": "Identifier service",
                            "type": "string"
                        },
                        "lastExecution": {
                            "description": "The last execution of task",
                            "type": "string",
                            "format": "date-time"
                        },
                        "nextExecution": {
                            "description": "The next execution of task",
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    "required": [
                        "name",
                        "taskId"
                    ]
                },
                "task": {
                    "type": "object",
                    "properties": {
                        "taskId": {
                            "description": "The task identifier",
                            "type": "string"
                        },
                        "route": {
                            "description": "The route",
                            "type": "string"
                        },
                        "description": {
                            "description": "The description",
                            "type": "string"
                        }
                    },
                    "required": [
                        "route"
                    ]
                }
            }
        },
        "contact": {
            "type": "object",
            "properties": {
                "communicationMean": {
                    "type": "object",
                    "description": "Communication means",
                    "properties": {
                        "code": {
                            "description": "The communication mean code",
                            "type": "string"
                        },
                        "name": {
                            "description": "The communication mean name",
                            "type": "string"
                        },
                        "enabled": {
                            "description": "The communication mean status [active or not]",
                            "type": "boolean"
                        }
                    }
                },
                "contact": {
                    "type": "object",
                    "description": "Contact",
                    "properties": {
                        "contactId": {
                            "description": "The contact's identifier",
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "contactType": {
                            "description": "The contact's identifier",
                            "type": "string",
                            "enum": [
                                "person",
                                "organization"
                            ]
                        },
                        "displayName": {
                            "description": "The contact displayed name",
                            "type": "string"
                        },
                        "orgName": {
                            "description": "The contact organization name",
                            "type": "string"
                        },
                        "firstName": {
                            "description": "The contact first name if person",
                            "type": "string"
                        },
                        "lastName": {
                            "description": "The contact last name if person",
                            "type": "string"
                        },
                        "title": {
                            "description": "The contact title if person",
                            "type": "string"
                        },
                        "function": {
                            "description": "The contact function",
                            "type": "string"
                        },
                        "service": {
                            "description": "The contact service",
                            "type": "string"
                        },
                        "address": {
                            "description": "The contact addresses",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/contact/properties/address"
                            }
                        },
                        "communication": {
                            "description": "The contact communication",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/contact/properties/communication"
                            }
                        }
                    },
                    "required": [
                        "displayName"
                    ]
                },
                "address": {
                    "type": "object",
                    "description": "Address of contacts",
                    "properties": {
                        "addressId": {
                            "description": "The address identifier",
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "purpose": {
                            "description": "The address purpose",
                            "type": "string"
                        },
                        "room": {
                            "description": "The address room identification",
                            "type": "string"
                        },
                        "floor": {
                            "description": "The address floor identification",
                            "type": "string"
                        },
                        "building": {
                            "description": "The address building identification",
                            "type": "string"
                        },
                        "number": {
                            "description": "The address number",
                            "type": "string"
                        },
                        "street": {
                            "description": "The address street",
                            "type": "string"
                        },
                        "postBox": {
                            "description": "The address postBox",
                            "type": "string"
                        },
                        "block": {
                            "description": "The address block identification",
                            "type": "string"
                        },
                        "citySubDivision": {
                            "description": "The address city sub-division",
                            "type": "string"
                        },
                        "postCode": {
                            "description": "The address post code (zip code)",
                            "type": "string"
                        },
                        "city": {
                            "description": "The address city name",
                            "type": "string"
                        },
                        "country": {
                            "description": "The address country name",
                            "type": "string"
                        }
                    },
                    "required": [
                        "purpose"
                    ]
                },
                "communication": {
                    "type": "object",
                    "description": "Communications of contacts",
                    "properties": {
                        "communicationId": {
                            "description": "The communication identifier",
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "purpose": {
                            "description": "The communication purpose",
                            "type": "string"
                        },
                        "comMeanCode": {
                            "description": "The communication mean code",
                            "type": "string"
                        },
                        "value": {
                            "description": "The communication value",
                            "type": "string"
                        },
                        "info": {
                            "description": "Some more info",
                            "type": "string"
                        }
                    },
                    "required": [
                        "purpose",
                        "comMeanCode"
                    ]
                }
            }
        },
        "digitalResource": {
            "type": "object",
            "properties": {
                "cluster": {
                    "type": "object",
                    "description": "Class message that represents a digital resource cluster",
                    "properties": {
                        "clusterId": {
                            "description": "The universal identifier",
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "clusterName": {
                            "description": "The cluster name",
                            "type": "string"
                        },
                        "clusterDescription": {
                            "description": "The cluster description",
                            "type": "string"
                        },
                        "clusterRepository": {
                            "description": "The cluster repositories",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/digitalResource/properties/clusterRepository"
                            }
                        }
                    }
                },
                "contentType": {
                    "type": "object",
                    "description": "Class model that represents a digital resource content type configuration",
                    "required": [
                        "name"
                    ],
                    "properties": {
                        "name": {
                            "description": "The format name",
                            "type": "string"
                        },
                        "description": {
                            "description": "The format description",
                            "type": "string"
                        },
                        "puids": {
                            "description": "The UK National Archives PRONOM format identifiers",
                            "type": "string"
                        },
                        "mediatype": {
                            "description": "The mediatype",
                            "type": "string",
                            "enum": [
                                "message",
                                "text",
                                "audio",
                                "video",
                                "image",
                                "application",
                                "multipart",
                                "model"
                            ]
                        },
                        "validationMode": {
                            "description": "The validation mode",
                            "type": "string"
                        },
                        "conversionMode": {
                            "description": "The conversion mode",
                            "type": "string"
                        },
                        "textExtractionMode": {
                            "description": "The conversion mode",
                            "type": "string"
                        },
                        "metadataExtractionMode": {
                            "description": "The metadata extraction mode",
                            "type": "string"
                        }
                    }
                },
                "conversionRule": {
                    "type": "object",
                    "description": "Class model that represents a conversion rule",
                    "properties": {
                        "conversionRuleId": {
                            "description": "The conversion rule identifier",
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "puid": {
                            "description": "The puid",
                            "type": "string"
                        },
                        "conversionService": {
                            "description": "The conversion service",
                            "type": "string"
                        },
                        "targetPuid": {
                            "description": "The target Puid",
                            "type": "string"
                        }
                    },
                    "required": [
                        "puid",
                        "conversionService",
                        "targetPuid"
                    ]
                },
                "digitalResource": {
                    "type": "object",
                    "description": "Class message that represents a stored digital resource",
                    "properties": {
                        "resId": {
                            "description": "The universal identifier",
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "archiveId": {
                            "description": "The archive identifier",
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "clusterId": {
                            "description": "The storing profile identifier",
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "size": {
                            "description": "The size of the resource",
                            "type": "integer"
                        },
                        "puid": {
                            "description": "The UK National Archives PRONOM registry format identifier",
                            "type": "string"
                        },
                        "mimetype": {
                            "description": "The mime type",
                            "type": "string"
                        },
                        "hash": {
                            "description": "The integrity hash value",
                            "type": "string"
                        },
                        "hashAlgorithm": {
                            "description": "The integrity hash algorithm",
                            "type": "string"
                        },
                        "fileExtension": {
                            "description": "The file extension",
                            "type": "string"
                        },
                        "fileName": {
                            "description": "The file name",
                            "type": "string"
                        },
                        "mediaInfo": {
                            "description": "The xml for media information : audio, video, image",
                            "type": "string"
                        },
                        "created": {
                            "description": "The date when the resource was recorded",
                            "type": "string",
                            "format": "date-time"
                        },
                        "updated": {
                            "description": "The date when the resource was last mofified",
                            "type": "string",
                            "format": "date-time"
                        },
                        "address": {
                            "description": "The current usable addresses of the resource",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/digitalResource/properties/address"
                            }
                        },
                        "handler": {
                            "description": "The handler to ressource",
                            "type": "string"
                        },
                        "metadata": {
                            "description": "The metadata",
                            "type": "object"
                        },
                        "format": {
                            "description": "The format",
                            "$ref": "#/definitions/digitalResource/properties/format"
                        },
                        "relatedResId": {
                            "description": "The related resource identifier",
                            "type": "string"
                        },
                        "relationshipType": {
                            "description": "The relationship type",
                            "type": "string"
                        }
                    }
                },
                "format": {
                    "type": "object",
                    "description": "Class message that represents a digital resource format",
                    "properties": {
                        "puid": {
                            "description": "The UK National Archives PRONOM format identifier",
                            "type": "string"
                        },
                        "name": {
                            "description": "The format name",
                            "type": "string"
                        },
                        "version": {
                            "description": "The version",
                            "type": "string"
                        },
                        "mimetypes": {
                            "description": "The mime type(s)",
                            "type": "array"
                        },
                        "extensions": {
                            "description": "The extension(s)",
                            "type": "array"
                        },
                        "mediatype": {
                            "description": "The mediatype",
                            "type": "string",
                            "enum": [
                                "message",
                                "text",
                                "audio",
                                "video",
                                "image",
                                "application",
                                "multipart",
                                "model"
                            ]
                        }
                    }
                },
                "fileInformation": {
                    "type": "object",
                    "description": "Class file information request",
                    "properties": {
                        "puid": {
                            "description": "The file format",
                            "type": "string"
                        },
                        "mimetype": {
                            "description": "The file mimetype",
                            "type": "string"
                        },
                        "hashMD5": {
                            "description": "The hash in md5",
                            "type": "string"
                        },
                        "hashSHA256": {
                            "description": "The hash in md5",
                            "type": "string"
                        },
                        "hashSHA512": {
                            "description": "The hash in md5",
                            "type": "string"
                        }
                    }
                },
                "repository": {
                    "type": "object",
                    "description": "Class message that represents a digital resource repository",
                    "properties": {
                        "repositoryId": {
                            "description": "The repository identifier",
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "repositoryName": {
                            "description": "The repository name",
                            "type": "string"
                        },
                        "repositoryReference": {
                            "description": "The repository reference",
                            "type": "string"
                        },
                        "repositoryType": {
                            "description": "The repository adapter (type)",
                            "type": "string"
                        },
                        "repositoryUri": {
                            "description": "The repository name It may be the root path on a filesystem, a datasource name for database, the IP/url, etc.",
                            "type": "string"
                        },
                        "enabled": {
                            "description": "The repository status (enabled/disabled)",
                            "type": "boolean"
                        },
                        "maxSize": {
                            "description": "The repository max ussable size",
                            "type": "integer"
                        },
                        "parameters": {
                            "description": "The repository parameters",
                            "type": "array"
                        }
                    },
                    "required": [
                        "repositoryName",
                        "repositoryReference",
                        "repositoryType",
                        "repositoryUri"
                    ]
                },
                "address": {
                    "type": "object",
                    "description": "Class message that represents an address for a digital resource in a repository",
                    "properties": {
                        "resId": {
                            "description": "The universal resource identifier",
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "repositoryId": {
                            "description": "The repository identifier",
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "path": {
                            "description": "The address of the resource in the repository It may be the path on a filesystem, a record identifier in database, etc.",
                            "type": "string"
                        },
                        "created": {
                            "description": "The date when the resource address was added",
                            "type": "string",
                            "format": "date-time"
                        },
                        "packed": {
                            "description": "Address is a packed resource in a package",
                            "type": "boolean"
                        },
                        "integrityCheckResult": {
                            "description": "Check result",
                            "type": "boolean"
                        }
                    }
                },
                "clusterRepository": {
                    "type": "object",
                    "description": "Class message that represents a digital resource cluster repository",
                    "properties": {
                        "clusterId": {
                            "description": "The cluster's universal identifier",
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "repositoryId": {
                            "description": "The repository's universal identifier",
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "writePriority": {
                            "description": "The priority on writing",
                            "type": "integer"
                        },
                        "readPriority": {
                            "description": "The priority on reading",
                            "type": "integer"
                        },
                        "deletePriority": {
                            "description": "The priority on deleting",
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "lifeCycle": {
            "type": "object",
            "properties": {
                "eventFormat": {
                    "type": "object",
                    "description": "Class message that represents an event format",
                    "properties": {
                        "type": {
                            "description": "The type of event",
                            "type": "string"
                        },
                        "format": {
                            "description": "The list of event's column",
                            "type": "string"
                        },
                        "message": {
                            "description": "The message of event",
                            "type": "string"
                        },
                        "notification": {
                            "description": "The list of event's column",
                            "type": "boolean"
                        }
                    }
                },
                "event": {
                    "type": "object",
                    "description": "Class model that represents an event of a journal",
                    "properties": {
                        "eventId": {
                            "description": "The universal identifier",
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "eventType": {
                            "description": "The name of the event type",
                            "type": "string",
                            "enum": [
                                "deposit",
                                "compliance",
                                "modification",
                                "disposal",
                                "restitution",
                                "profileAdded",
                                "profileModified",
                                "profileDeleted"
                            ]
                        },
                        "instanceName": {
                            "description": "The application instance name",
                            "type": "string"
                        },
                        "timestamp": {
                            "description": "The timestamp of the event",
                            "type": "string",
                            "format": "date-time"
                        },
                        "orgRegNumber": {
                            "description": "The user organization registration number",
                            "type": "string"
                        },
                        "orgUnitRegNumber": {
                            "description": "The user orgUnit registration number",
                            "type": "string"
                        },
                        "accountId": {
                            "description": "The account identifier",
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "objectClass": {
                            "description": "The class of the aimed object",
                            "type": "string"
                        },
                        "objectId": {
                            "description": "The identifier of the aimed object",
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "operationResult": {
                            "description": "The operation result",
                            "type": "boolean"
                        },
                        "description": {
                            "description": "The description of the event",
                            "type": "string"
                        },
                        "eventInfo": {
                            "description": "The event extra information",
                            "type": "string"
                        }
                    }
                }
            }
        },
        "organization": {
            "type": "object",
            "properties": {
                "orgContact": {
                    "type": "object",
                    "description": "Message of the orgContact",
                    "required": [
                        "contactId",
                        "orgId"
                    ],
                    "properties": {
                        "contactId": {
                            "description": "The contact identifier",
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "orgId": {
                            "description": "The organization identifier",
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "isSelft": {
                            "description": "Is self",
                            "type": "boolean"
                        }
                    }
                },
                "orgType": {
                    "type": "object",
                    "description": "Organization type",
                    "required": [
                        "code"
                    ],
                    "properties": {
                        "code": {
                            "description": "The organization's type identifier",
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "name": {
                            "description": "The organization's type name",
                            "type": "string"
                        }
                    }
                },
                "organizationTree": {
                    "type": "object",
                    "description": "Organization tree",
                    "properties": {
                        "orgId": {
                            "description": "The organization's identifier",
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "displayName": {
                            "description": "The displayed name of the object",
                            "type": "string"
                        },
                        "registrationNumber": {
                            "description": "The registration number",
                            "type": "string"
                        },
                        "parentOrgId": {
                            "description": "The organization's parent orgId",
                            "type": "string"
                        },
                        "ownerOrgId": {
                            "description": "The organization owner orgId",
                            "type": "string"
                        },
                        "isOrgUnit": {
                            "description": "The organization is a service",
                            "type": "boolean"
                        },
                        "organization": {
                            "description": "The children organizations",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/organization/properties/organization"
                            }
                        },
                        "userPosition": {
                            "description": "The users list attached to the organization",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/organization/properties/userPosition"
                            }
                        },
                        "servicePosition": {
                            "description": "The service list attached to the organization",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/organization/properties/servicePosition"
                            }
                        }
                    },
                    "required": [
                        "displayName",
                        "registrationNumber"
                    ]
                },
                "organization": {
                    "type": "object",
                    "description": "Organization",
                    "properties": {
                        "orgId": {
                            "description": "The organization identifier",
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "orgName": {
                            "description": "The organization name (legal)",
                            "type": "string"
                        },
                        "otherOrgName": {
                            "description": "Another organization legal or known form of name",
                            "type": "string"
                        },
                        "displayName": {
                            "description": "The displayed name of the object",
                            "type": "string"
                        },
                        "legalClassification": {
                            "description": "The organization legal classification",
                            "type": "string"
                        },
                        "businessType": {
                            "description": "The organization business type",
                            "type": "string"
                        },
                        "description": {
                            "description": "The organization description",
                            "type": "string"
                        },
                        "orgTypeCode": {
                            "description": "The organization type code",
                            "type": "string"
                        },
                        "orgRoleCodes": {
                            "description": "The organization role codes list",
                            "type": "string"
                        },
                        "registrationNumber": {
                            "description": "The registration number",
                            "type": "string"
                        },
                        "taxIdentifier": {
                            "description": "The organization tax identifier",
                            "type": "string"
                        },
                        "beginDate": {
                            "description": "The organization begin date",
                            "type": "string",
                            "format": "date"
                        },
                        "endDate": {
                            "description": "The organization end date",
                            "type": "string",
                            "format": "date"
                        },
                        "parentOrgId": {
                            "description": "The organization parent orgId",
                            "type": "string"
                        },
                        "ownerOrgId": {
                            "description": "The organization owner orgId",
                            "type": "string"
                        },
                        "isOrgUnit": {
                            "description": "The organization is an orgUnit",
                            "type": "boolean"
                        },
                        "users": {
                            "description": "The users attached to the orgUnit",
                            "type": "array"
                        },
                        "services": {
                            "description": "The services attached to the orgUnit",
                            "type": "array"
                        },
                        "contacts": {
                            "description": "The contact of the orgUnit",
                            "type": "array"
                        },
                        "archivalProfileAccess": {
                            "description": "The archival profile access list",
                            "type": "array"
                        }
                    },
                    "required": [
                        "displayName",
                        "registrationNumber"
                    ]
                },
                "userPositionTree": {
                    "type": "object",
                    "description": "Model of the userPosition",
                    "properties": {
                        "userAccountId": {
                            "description": "The user account of the person",
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "displayName": {
                            "description": "The user dislay name",
                            "type": "string"
                        },
                        "function": {
                            "description": "The user function",
                            "type": "string"
                        },
                        "orgId": {
                            "description": "The organization's identitfier",
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "default": {
                            "description": "The user's default organization",
                            "type": "boolean"
                        }
                    }
                },
                "servicePosition": {
                    "type": "object",
                    "description": "Model of servicePosition",
                    "properties": {
                        "serviceAccountId": {
                            "description": "The sevice account's identifier",
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "orgId": {
                            "description": "The organization's identitfier",
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        }
                    }
                },
                "userPosition": {
                    "type": "object",
                    "description": "Model of the userPosition",
                    "properties": {
                        "userAccountId": {
                            "description": "The user account of the person",
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "orgId": {
                            "description": "The organization's identifier",
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "function": {
                            "description": "The person's function",
                            "type": "string"
                        },
                        "default": {
                            "description": "The user's default organization",
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "recordsManagement": {
            "type": "object",
            "properties": {
                "accessRule": {
                    "type": "object",
                    "description": "Class model that represents access rule",
                    "properties": {
                        "code": {
                            "description": "The code of the access",
                            "type": "string"
                        },
                        "duration": {
                            "description": "The duration of the access",
                            "type": "string",
                            "pattern": "^(\\-\\+)?P(\\d+Y)?(\\d+M)?(\\d+D)?(T(\\d+H)?(\\d+M)?(\\d+S)?)?$"
                        },
                        "description": {
                            "description": "The description",
                            "type": "string"
                        }
                    }
                },
                "archivalProfile": {
                    "type": "object",
                    "description": "Class model that represents an archival profile",
                    "properties": {
                        "archivalProfileId": {
                            "description": "The identifier",
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "reference": {
                            "description": "The reference",
                            "type": "string"
                        },
                        "name": {
                            "description": "The name",
                            "type": "string"
                        },
                        "description": {
                            "description": "The description of the rule",
                            "type": "string"
                        },
                        "descriptionSchema": {
                            "description": "The archive description schema",
                            "type": "string"
                        },
                        "descriptionClass": {
                            "description": "The archive description class",
                            "type": "string"
                        },
                        "retentionStartDate": {
                            "description": "The starting date of the retention rule calculation",
                            "type": "string"
                        },
                        "retentionRuleCode": {
                            "description": "The retention rule code",
                            "type": "string"
                        },
                        "accessRuleCode": {
                            "description": "The access code",
                            "type": "string"
                        },
                        "acceptUserIndex": {
                            "description": "The document accepts user custom indexes",
                            "type": "boolean"
                        },
                        "acceptArchiveWithoutProfile": {
                            "description": "The archive accepts sub archive without profile",
                            "type": "boolean"
                        },
                        "fileplanLevel": {
                            "description": "The archive description level",
                            "type": "string"
                        },
                        "archiveDescription": {
                            "description": "The list of profile description",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/recordsManagement/properties/archiveDescription"
                            }
                        },
                        "containedProfiles": {
                            "description": "The list of child archival profiles",
                            "type": "array"
                        }
                    }
                },
                "archive": {
                    "type": "object",
                    "description": "Class model that represents an archive",
                    "properties": {
                        "archiveId": {
                            "description": "The archive identifier",
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "archiveName": {
                            "description": "The archive name",
                            "type": "string"
                        },
                        "originatorArchiveId": {
                            "description": "Originator organisation Archive identifier",
                            "type": "string"
                        },
                        "filePlanPosition": {
                            "description": "The archive folder id",
                            "type": "string"
                        },
                        "descriptionClass": {
                            "description": "The name of description class",
                            "type": "string"
                        },
                        "archivalProfileReference": {
                            "description": "The name of archival profile",
                            "type": "string"
                        },
                        "serviceLevelReference": {
                            "description": "The name of service level (unique key for serviceLevels)",
                            "type": "string"
                        },
                        "retentionRuleCode": {
                            "description": "The retention rule code",
                            "type": "string"
                        },
                        "retentionStartDate": {
                            "description": "The starting date of the retention rule calculation",
                            "type": "string",
                            "format": "date"
                        },
                        "retentionDuration": {
                            "description": "The duration of retention",
                            "type": "string",
                            "pattern": "^(\\-\\+)?P(\\d+Y)?(\\d+M)?(\\d+D)?(T(\\d+H)?(\\d+M)?(\\d+S)?)?$"
                        },
                        "finalDisposition": {
                            "description": "The action to execute when the retention rule is over",
                            "type": "string"
                        },
                        "disposalDate": {
                            "description": "The disposal date of the archive",
                            "type": "string",
                            "format": "date"
                        },
                        "originatingDate": {
                            "description": "The originating date of the archive",
                            "type": "string",
                            "format": "date-time"
                        },
                        "accessRuleCode": {
                            "description": "The access restriction rule code",
                            "type": "string"
                        },
                        "accessRuleDuration": {
                            "description": "The access rule duration, before archive is public",
                            "type": "string",
                            "pattern": "^(\\-\\+)?P(\\d+Y)?(\\d+M)?(\\d+D)?(T(\\d+H)?(\\d+M)?(\\d+S)?)?$"
                        },
                        "accessRuleStartDate": {
                            "description": "The access rule validity date",
                            "type": "string",
                            "format": "date"
                        },
                        "accessRuleComDate": {
                            "description": "The access rule communication  date",
                            "type": "string",
                            "format": "date"
                        },
                        "classificationRuleCode": {
                            "description": "The classification rule code",
                            "type": "string"
                        },
                        "classificationRuleDuration": {
                            "description": "The classification duration, before archive is unclassified",
                            "type": "string",
                            "pattern": "^(\\-\\+)?P(\\d+Y)?(\\d+M)?(\\d+D)?(T(\\d+H)?(\\d+M)?(\\d+S)?)?$"
                        },
                        "classificationRuleStartDate": {
                            "description": "The classification start date",
                            "type": "string",
                            "format": "date"
                        },
                        "classificationEndDate": {
                            "description": "The classification end date",
                            "type": "string",
                            "format": "date"
                        },
                        "classificationLevel": {
                            "description": "The classification level",
                            "type": "string"
                        },
                        "classificationOwner": {
                            "description": "The classification owner identification",
                            "type": "string"
                        },
                        "status": {
                            "description": "The status",
                            "type": "string",
                            "enum": [
                                "received",
                                "pending",
                                "preserved",
                                "frozen",
                                "disposable",
                                "disposed",
                                "restitued"
                            ]
                        },
                        "parentArchiveId": {
                            "description": "The parent archive identifier",
                            "type": "string"
                        },
                        "descriptionObject": {
                            "description": "The descriptive metadata object"
                        },
                        "fullTextIndexation": {
                            "description": "The status of fulltext indaxation",
                            "type": "string",
                            "enum": [
                                "requested",
                                "indexed",
                                "failed",
                                "none"
                            ]
                        },
                        "lifeCycleEvent": {
                            "description": "The life cycle events",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/lifeCycle/properties/event"
                            }
                        },
                        "digitalResources": {
                            "description": "Digital resources of archive Digital resources of archive",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/digitalResource/properties/digitalResource"
                            }
                        },
                        "archivalAgreementReference": {
                            "description": "The archival agreement reference",
                            "type": "string"
                        },
                        "originatorOrgRegNumber": {
                            "description": "Register number of originator organisation",
                            "type": "string"
                        },
                        "depositorOrgRegNumber": {
                            "description": "Register number of depositor organisation",
                            "type": "string"
                        },
                        "archiverOrgRegNumber": {
                            "description": "Register number of archiver organisation",
                            "type": "string"
                        },
                        "fileplanLevel": {
                            "description": "The archive description level",
                            "type": "string"
                        },
                        "contents": {
                            "description": "The contained archives list",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/recordsManagement/properties/archive"
                            }
                        }
                    }
                },
                "archiveRetentionRule": {
                    "type": "object",
                    "description": "Class model that represents a retentionRule applied to an archive",
                    "properties": {
                        "archiveId": {
                            "description": "The concerned archive's identifier",
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "retentionRuleCode": {
                            "description": "The code of retention rules",
                            "type": "string"
                        },
                        "status": {
                            "description": "The status",
                            "type": "string"
                        },
                        "retentionStartDate": {
                            "description": "The starting date of the retention rule calculation",
                            "type": "string",
                            "format": "date"
                        },
                        "retentionDuration": {
                            "description": "The duration of retention",
                            "type": "string",
                            "pattern": "^(\\-\\+)?P(\\d+Y)?(\\d+M)?(\\d+D)?(T(\\d+H)?(\\d+M)?(\\d+S)?)?$"
                        },
                        "finalDisposition": {
                            "description": "The action to execute when the retention rule is over",
                            "type": "string"
                        },
                        "disposalDate": {
                            "description": "Disposal date",
                            "type": "string",
                            "format": "date"
                        }
                    }
                },
                "archiveAccessRule": {
                    "type": "object",
                    "description": "Class model that represents a accessRule applied to an archive",
                    "properties": {
                        "archiveId": {
                            "description": "The concerned archive's identifier",
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "status": {
                            "description": "The status",
                            "type": "string"
                        },
                        "accessRuleCode": {
                            "description": "The code of access rule",
                            "type": "string"
                        },
                        "accessRuleStartDate": {
                            "description": "The starting date of the access rule calculation",
                            "type": "string",
                            "format": "date"
                        },
                        "accessRuleDuration": {
                            "description": "The duration of access",
                            "type": "string",
                            "pattern": "^(\\-\\+)?P(\\d+Y)?(\\d+M)?(\\d+D)?(T(\\d+H)?(\\d+M)?(\\d+S)?)?$"
                        },
                        "accessRuleComDate": {
                            "description": "communication date",
                            "type": "string",
                            "format": "date"
                        }
                    }
                },
                "archiveRelationShip": {
                    "type": "object",
                    "description": "Message that represents a relationship between 2 archives",
                    "required": [
                        "archiveId",
                        "relatedArchiveId",
                        "typeCode"
                    ],
                    "properties": {
                        "archiveId": {
                            "description": "The archive identifier",
                            "type": "string"
                        },
                        "relatedArchiveId": {
                            "description": "The related archive identifier",
                            "type": "string"
                        },
                        "typeCode": {
                            "description": "The relationship type code",
                            "type": "string"
                        },
                        "description": {
                            "description": "The relationship information",
                            "type": "string"
                        }
                    }
                },
                "archiveRelationship": {
                    "type": "object",
                    "description": "Message that represents a relationship between 2 archives",
                    "required": [
                        "archiveId",
                        "relatedArchiveId",
                        "typeCode"
                    ],
                    "properties": {
                        "archiveId": {
                            "description": "The archive identifier",
                            "type": "string"
                        },
                        "relatedArchiveId": {
                            "description": "The related archive identifier",
                            "type": "string"
                        },
                        "typeCode": {
                            "description": "The relationship type code",
                            "type": "string"
                        },
                        "description": {
                            "description": "The relationship information",
                            "type": "string"
                        }
                    }
                },
                "descriptionField": {
                    "type": "object",
                    "description": "Class model that represents a description field of the data dictionnary",
                    "required": [
                        "name",
                        "label",
                        "type"
                    ],
                    "properties": {
                        "name": {
                            "description": "The name of the property",
                            "type": "string"
                        },
                        "label": {
                            "description": "The label for users",
                            "type": "string"
                        },
                        "type": {
                            "description": "The type iof data : name, string, integer, float, boolean, number, date, timestamp, datetime",
                            "type": "string"
                        },
                        "default": {
                            "description": "The default value",
                            "type": "string"
                        },
                        "minLength": {
                            "type": "integer"
                        },
                        "maxLength": {
                            "type": "integer"
                        },
                        "minValue": {
                            "type": "number",
                            "format": "float"
                        },
                        "maxValue": {
                            "type": "number",
                            "format": "float"
                        },
                        "enumeration": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "pattern": {
                            "type": "string"
                        }
                    }
                },
                "retentionRule": {
                    "type": "object",
                    "description": "Class model that represents a retentionRule",
                    "properties": {
                        "code": {
                            "description": "The retention rule code",
                            "type": "string"
                        },
                        "duration": {
                            "description": "The duration of retention",
                            "type": "string",
                            "pattern": "^(\\-\\+)?P(\\d+Y)?(\\d+M)?(\\d+D)?(T(\\d+H)?(\\d+M)?(\\d+S)?)?$"
                        },
                        "finalDisposition": {
                            "description": "The action to execute when the retention rule is over",
                            "type": "string",
                            "enum": [
                                "preservation",
                                "destruction"
                            ]
                        },
                        "description": {
                            "description": "The description of the rule",
                            "type": "string"
                        },
                        "label": {
                            "description": "The label of the rule",
                            "type": "string"
                        }
                    }
                },
                "serviceLevel": {
                    "type": "object",
                    "description": "Class model that represents a service level",
                    "properties": {
                        "serviceLevelId": {
                            "description": "The service level identifier",
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "reference": {
                            "description": "The service level reference",
                            "type": "string"
                        },
                        "digitalResourceClusterId": {
                            "description": "The identifier of a cluster for digital ressource storage",
                            "type": "string",
                            "pattern": "^[a-z_][a-z0-9\\-_]*$"
                        },
                        "control": {
                            "description": "The control list of the service level : formatDetection, formatValidation, virusCheck",
                            "type": "string"
                        },
                        "default": {
                            "description": "Default if not specified",
                            "type": "boolean"
                        },
                        "samplingFrequency": {
                            "description": "The sampling frequency",
                            "type": "integer"
                        },
                        "samplingRate": {
                            "description": "The sampling rate",
                            "type": "integer"
                        }
                    }
                },
                "archiveDescription": {
                    "type": "object",
                    "description": "Class model that represents an archival profile",
                    "properties": {
                        "fieldName": {
                            "description": "The name of the property",
                            "type": "string"
                        },
                        "required": {
                            "description": "The status of the property (required or not)",
                            "type": "boolean"
                        },
                        "position": {
                            "description": "The position of field",
                            "type": "integer"
                        }
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "laabs": {
            "type": "apiKey",
            "description": "A service token provided by the administrator and send as a cookie named 'LAABS-AUTH'",
            "name": "Cookie[LAABS-AUTH]",
            "in": "header"
        }
    },
    "externalDocs": {
        "description": "The Maarch RM documentation Git repository",
        "url": "http://labs.maarch.org/maarch/maarchRM.doc/tree/2.1"
    }
}